{"version":3,"file":"static/js/131.62f5454d.chunk.js","mappings":"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","sources":["views/pages/errors/Error404.js","services/transaction.js","services/account.js","views/pages/Dashboard.js","views/components/Pagination.js","utils/Antd.js","views/pages/Transaction.js","views/pages/Account.js","views/pages/Profile.js","views/layout/Layout.js"],"sourcesContent":["import { Result, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Error404() {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\n        />\n    );\n}\n\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'transation';\n\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static save(data) {\n        return axios.post(this.baseURL + \"/save\", data);\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n    static balance(data) {\n        return axios.get(this.baseURL + '/get-balence', { params: data });\n    }\n\n}\n\n\n\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'account';\n\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/'+id, { params: data });\n    }\n    static save(data) {\n        return axios.post(this.baseURL + \"/save\", data);\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n}","import { Card, Col, Row, Statistic, Typography, message, Form, Button, DatePicker, Select, Spin } from 'antd';\nimport { LoadingOutlined, } from '@ant-design/icons';\nimport service from '../../services/transaction';\nimport serviceAccount from '../../services/account';\nimport { useEffect, useState } from 'react';\n\nconst Dashboard = () => {\n\tconst [ajxRequesting, setAjxRequesting] = useState(false);\n\tconst [accounts, setAccounts] = useState([]);\n\tconst [qData, setQData] = useState({});\n\tconst [given, setGiven] = useState(\"\")\n\tconst [received, setReveived] = useState(\"\")\n\tconst [totalcomission, setTotalComission] = useState(\"\")\n\n\n\tuseEffect(() => {\n\t\tsetAjxRequesting(true);\n\t\tgetBalance();\n\t\tserviceAccount.list({ isAll: 1 })\n\t\t\t.then(res => {\n\t\t\t\tsetAccounts(res.data?.map(v => ({ label: v.name, value: v._id })));\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (typeof err.message === 'object') {\n\t\t\t\t\tlet dt = err.message[Object.keys(err.message)[0]];\n\t\t\t\t\tmessage.error(dt);\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error(err.message);\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\tsetAjxRequesting(false);\n\t\t\t});\n\t}, []);\n\n\n\tconst getBalance = () => {\n\t\tsetAjxRequesting(true);\n\t\tservice.balance(qData).then((res) => {\n\t\t\tlet creditTotal = 0\n\t\t\tlet comission = 0\n\t\t\tlet debitTotal = 0\n\t\t\tres.data.map((item) => {\n\t\t\t\tif (item.type === \"credit\") {\n\t\t\t\t\tcreditTotal += item.totalAmount\n\t\t\t\t\tcomission += item.comissionCharge\n\t\t\t\t} else {\n\t\t\t\t\tdebitTotal += item.totalAmount\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tsetGiven(debitTotal?.toFixed(2))\n\t\t\tsetReveived(creditTotal?.toFixed(2))\n\t\t\tsetTotalComission(comission?.toFixed(2))\n\n\t\t}).finally(() => {\n\t\t\tsetAjxRequesting(false);\n\t\t});\n\t}\n\n\treturn <>\n\t\t<Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n\t\t\t<Row gutter={[12, 2]}>\n\t\t\t\t<Col xs={{ span: 24 }} sm={{ span: 4 }}>\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tshowSearch\n\t\t\t\t\t\t\tallowClear\n\t\t\t\t\t\t\tplaceholder=\"Select an Account\"\n\t\t\t\t\t\t\toptionFilterProp=\"children\"\n\t\t\t\t\t\t\tvalue={qData.accountId}\n\t\t\t\t\t\t\tonChange={(v) => { setQData({ ...qData, accountId: v }) }}\n\t\t\t\t\t\t\tfilterOption={(input, option) =>\n\t\t\t\t\t\t\t\t(option?.label ?? '').toLowerCase().includes(input.toLowerCase())\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t\toptions={accounts}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={{ span: 24 }} sm={{ span: 4 }}  >\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t<DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: e?.[0] ? new Date(e[0]) : null, endTime: e?.[1] ? new Date(e[1]) : null }) }} />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={{ span: 24 }} sm={{ span: 3 }}>\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block onClick={() => { getBalance() }}>Search</Button>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row gutter={[20, 20]} style={{ marginTop: 20 }}>\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 8 }}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#7171eb\" }} >Total Amount Received</Typography.Title>} value={`₹ ${received}`} />\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 8 }}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#e65050\" }} >Total Amount Given</Typography.Title>} value={`₹ ${given}`} precision={2} />\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 8 }}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"green\" }}>Total Comission</Typography.Title>} value={`₹  ${totalcomission}`} precision={2} />\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Spin>\n\t</>\n}\nexport default Dashboard;\n","import { Pagination, Tag } from 'antd';\nexport default function MyPagination(props) {\n    const { qData, setQData } = props;\n\n    const handleChange = (page, pp) => {\n        if (qData.limit !== pp) {\n            setQData({ ...qData, page: 1, limit: pp });\n        } else {\n            setQData({ ...qData, page: page });\n        }\n    }\n\n    const showTotal = () => {\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\n        let end = qData.page * qData.limit;\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\n    }\n    return (\n        <>\n            {\n                qData.total > 0\n                    ? <Pagination\n                        total={qData.total}\n                        showTotal={showTotal}\n                        pageSize={qData.limit}\n                        current={qData.page}\n                        onChange={handleChange}\n                        showSizeChanger={true}\n                    />\n                    : null\n            }\n        </>\n    );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, forwardRef } from 'react';\nimport moment from 'moment';\nimport {\n    DatePicker,\n    Checkbox,\n    message,\n    Upload,\n    Modal,\n} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nexport function AntdDatepicker(props) {\n    let {\n        format,\n        getFormat = 'YYYY-MM-DD',\n        inputReadOnly,\n        value,\n        defaultValue,\n        onChange,\n        disablePastDate = false,\n        disableUpcomingDate = false,\n        ...rest\n    } = props;\n\n\n    let otherProps = {};\n    if (typeof value !== \"undefined\") {\n        // otherProps.value = moment(value).format(format || 'DD MMM YYYY') ? moment(new Date(value)) : null\n        otherProps.value = moment(new Date(value ? value : new Date()), format || 'DD MMM YYYY');\n    }\n    if (typeof defaultValue !== \"undefined\") {\n        otherProps.defaultValue = defaultValue ? moment(new Date(defaultValue)) : null\n    }\n    if (typeof onChange !== \"undefined\") {\n        otherProps.onChange = (dt) => {\n            onChange(dt ? moment(dt).format(getFormat) : null);\n        }\n    }\n    useEffect(() => {\n        onChange(moment(value).format(getFormat))\n    }, [])\n\n    return (\n        <DatePicker\n            format={format || 'DD MMM YYYY'}\n            inputReadOnly={inputReadOnly || true}\n            disabledDate={(current) => {\n                let customDate = moment().format(\"YYYY-MM-DD\");\n                if (disablePastDate) {\n                    return current && current < moment(customDate, \"YYYY-MM-DD\");\n                }\n                if (disableUpcomingDate) {\n                    return current && current > moment(customDate, \"YYYY-MM-DD\");\n                }\n            }}\n            {...otherProps}\n            {...rest}\n            style={{ width: '100%' }}\n        />\n    )\n}\n\nexport function MultiChechBox(props) {\n    const { col = 3 } = props;\n    const type = typeof props.value === 'object' ? 'array' : 'string';\n\n    let [values, setValues] = useState();\n    let [options, setOptions] = useState([]);\n\n    const handleChange = (e) => {\n        const val = typeof e.target.value * 1 !== 'NaN' ? e.target.value + '' : e.target.value * 1;\n        if (e.target.checked) {\n            values.push(val)\n            setValues([...values]);\n        } else {\n            if (values.indexOf(val) > -1) {\n                values.splice(values.indexOf(val), 1);\n                setValues([...values])\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (type === 'string') {\n            values = props.value ? props.value.split(',').map((v) => v * 1) : [];\n            setValues([...values]);\n        } else {\n            setValues([...props.value]);\n        }\n    }, [props.value]);\n\n    useEffect(() => {\n        let opts = props.options.map((v, i) => {\n            if (v.value) {\n                return { value: v.value * 1, label: v.label }\n            } else if (v.id) {\n                return { value: v.id * 1, label: v.name || v.title || v.label }\n            } else if (v._id) {\n                return { value: v._id + '', label: v.name || v.title || v.label }\n            }\n            return null;\n        });\n        setOptions(opts);\n    }, [props.options]);\n\n    useEffect(() => {\n        // if (type === 'string') {\n        //     props.onChange(values?.join());\n        // } else {\n        props.onChange(values)\n        // }\n    }, [(values || []).join(\",\")])\n\n    return (\n        <div className=\"row mingap\" >\n            {\n                options.map((v, i) => (\n                    <div className={`col-md-${col} mb-2 form-group`} key={i}>\n                        <div className=\"border p-1\">\n                            <Checkbox\n                                value={typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1}\n                                checked={values?.includes(typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1)}\n                                onChange={handleChange}\n                                className=\"mx-0 mr15\"\n                            >\n                                {v.label}\n                            </Checkbox>\n                        </div>\n                    </div>\n                ))\n            }\n        </div>\n\n    );\n}\n\nexport function AntdMsg($msg, $type = 'success') {\n    if ($msg) {\n        if ($type === 'success')\n            message.success($msg);\n        if ($type === 'error')\n            message.error($msg);\n        if ($type === 'warning')\n            message.warning($msg);\n    }\n};\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nconst UploadImage = forwardRef((props, ref) => {\n    const { fileCount } = props;\n    const fileRef = ref;\n    let { files } = props;\n    useEffect(() => {\n        setFileList(files)\n    }, [files])\n\n    if (files.length) {\n        files = files?.map((v, i) => {\n            return { uid: i, url: v.url, status: 'done', name: v.name };\n        });\n    } else {\n        files = [];\n    }\n\n\n    const [fileList, setFileList] = useState(files);\n\n    const dummyRequest = ({ file, onSuccess }) => {\n        setTimeout(() => {\n            onSuccess(\"ok\");\n            if (!fileRef.current.uploadingFiles) {\n                fileRef.current.uploadingFiles = [];\n            }\n            fileRef.current.uploadingFiles?.push(file);\n        }, 0);\n    };\n    const [previewVisible, setPreviewVisible] = useState(false);\n    const [previewImage, setPreviewImage] = useState('');\n    const [previewTitle, setPreviewTitle] = useState('');\n\n    const handleCancel = () => setPreviewVisible(false);\n\n    const handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n        setPreviewVisible(true);\n        setPreviewImage(file.url || file.preview);\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n    };\n\n    const handleChange = ({ fileList: newFileList }) => {\n        setFileList(newFileList);\n    };\n\n    const uploadButton = (\n        <div>\n            <PlusOutlined />\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n    return (\n        <>\n            <Upload\n                // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                listType=\"picture-card\"\n                customRequest={dummyRequest}\n                fileList={fileList}\n                onPreview={handlePreview}\n                onChange={(value) => {\n                    if (value.file.status === 'removed' || value.file.status) {\n                        handleChange(value)\n                    }\n                }}\n                beforeUpload={\n                    (file) => {\n                        if (!file.type.includes('image/')) {\n                            message.error('Invalid file type');\n                            return false\n                        }\n                    }\n                }\n                onRemove={(e) => {\n                    if (!fileRef.current.deletingFiles) {\n                        fileRef.current.deletingFiles = [];\n                    }\n                    if (!e.thumbUrl) {\n                        fileRef.current.deletingFiles?.push(e);\n                    } else {\n                        fileRef.current.uploadingFiles = fileRef.current.uploadingFiles.filter((v) => { return v.uid !== e.uid })\n                    }\n                }}\n            >\n                {fileList.length >= fileCount ? null : uploadButton}\n            </Upload>\n            <Modal\n                open={previewVisible}\n                title={previewTitle}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n            </Modal>\n        </>\n    );\n})\n\nexport default UploadImage;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, Tag } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/transaction';\nimport serviceAccount from '../../services/account';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport { Excel } from \"antd-table-saveas-excel\"\nimport moment from 'moment';\nimport dayjs from 'dayjs';\n\n\n\nexport default function Transaction({ accountId = null }) {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [accounts, setAccounts] = useState([]);\n    const [balance, setBalance] = useState(0)\n    const [qData, setQData] = useState({ page: 1, limit: 20, accountId });\n    const addNewModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Company',\n            dataIndex: 'masterAccount',\n            width: 50,\n            render: (v) => {\n                if (v === \"SP\") {\n                    return <div style={{ background: \"blue\", textAlign: \"center\", color: \"white\" }}>{v}</div>\n                }\n                else if (v === \"SL\") {\n                    return <div style={{ background: \"Green\", textAlign: \"center\", color: \"white\" }}>{v}</div>\n                }\n                else if (v === \"SLQR\") {\n                    return <div style={{ background: \"orange\", textAlign: \"center\", color: \"white\" }}>{v}</div>\n                }\n                else if (v === \"QS\") {\n                    return <div style={{ background: \"pink\", textAlign: \"center\", color: \"white\" }}>{v}</div>\n                }\n                else if (v === \"PAR\") {\n                    return <div style={{ background: \"yellow\", textAlign: \"center\", color: \"white\" }}>{v}</div>\n                }\n\n\n            }\n        },\n\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            width: 50,\n            render: v => moment(v).format('DD MMM YYYY')\n        },\n\n        {\n            title: 'Time',\n            dataIndex: 'createdAt',\n            width: 60,\n            render: v => moment(v).format('HH:mm A')\n\n        },\n        {\n            title: \"Name\",\n\n            dataIndex: \"accountDetail\",\n            width: 100,\n            render: (data) => data?.name\n\n        },\n\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            width: 80,\n            render: (v, row) => row.transactionType === \"credit\" ? <div style={{ background: \"green\", fontSize: \"x-large\", color: \"white\", textAlign: \"center\" }}>  {` ₹${row.amount}`}</div> : <div style={{ background: \"red\", fontSize: \"x-large\", color: \"white\", textAlign: \"center\" }}>{` ₹${row.amount}`}</div>\n        },\n\n        {\n            title: 'Comission',\n            //dataIndex: 'comissionPercentage',\n            width: 80,\n            render: (v, data) => data.transactionType === \"credit\" ? data.amount * data.comissionPercentage / 100 : \"---\"\n        },\n        {\n            title: 'Net Amount',\n\n            width: 80,\n            render: (v, data) => data.transactionType === \"credit\" ? data.amount - (data.amount * data.comissionPercentage / 100) : \"---\"\n        },\n\n\n\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    {\n                        <Popconfirm\n                            title=\"Are you sure to delete this Account data?\"\n                            onConfirm={() => { deleteData(row._id); }}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                        </Popconfirm>\n                    }\n                    {\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        getBalance()\n        service.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, accounts, accountId }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n\n    useEffect(() => {\n        list();\n        getBalance()\n    }, [qData.page, qData.limit]);\n\n\n    useEffect(() => {\n        serviceAccount.list({ isAll: 1 })\n            .then(res => {\n                setAccounts(res.data);\n            })\n            .catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            })\n    }, []);\n\n\n    const getBalance = () => {\n        service.balance().then((res) => {\n            let creditTotal = 0\n            let comission = 0\n            let debitTotal = 0\n            res.data?.map((item) => {\n                if (item.type === \"credit\") {\n                    creditTotal += item.totalAmount\n                    comission += item.comissionCharge\n\n                } else {\n                    debitTotal += item.totalAmount\n\n                }\n            })\n\n            setBalance((creditTotal - comission - debitTotal)?.toFixed(2))\n\n        })\n    }\n    return (\n        <>\n            <Row>\n                <Col xs={{ span: 4 }} sm={{ span: 12 }} lg={{ span: 4 }}>\n                    <Button onClick={() => AddExcel(data)}>Download in Excel</Button>\n\n                </Col>\n            </Row>\n            <Typography.Title level={5} style={{ margin: 0 }}>\n                <span>\n                    List of All Transactions\n                </span>\n                <span style={{ color: 'red', float: 'right' }}>\n                    Available Balance ₨ {balance}\n                </span>\n            </Typography.Title>\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 100px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, accounts, balance, accountId }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, accountId, qData, setQData, list, accounts, }) {\n\n    const [accountList, setAccountList] = useState([]);\n    const onChange = (v, key) => {\n        qData[key] = v;\n        if (v === undefined) {\n            qData[key] = \"\";\n            list()\n        }\n\n    }\n    useEffect(() => {\n        const acc = accounts?.map((item) => (\n            {\n                label: item.name,\n                value: item._id,\n            }\n\n        ))\n        setAccountList(acc)\n    }, [accounts])\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                {\n                    accountId\n                        ? null\n                        : <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\n                            <Form.Item style={{ marginBottom: 0 }}>\n                                <Select\n                                    showSearch\n                                    allowClear\n                                    placeholder=\"Select an Account\"\n                                    optionFilterProp=\"children\"\n                                    onChange={(e) => onChange(e, \"accountId\")}\n                                    filterOption={(input, option) =>\n                                        (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\n                                    }\n                                    options={accountList}\n                                />\n                            </Form.Item>\n                        </Col>\n                }\n\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: e?.[0] ? new Date(e[0]) : null, endTime: e?.[1] ? new Date(e[1]) : null }) }} />\n                    </Form.Item>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Select placeholder='Received or Given' value={qData.transactionType} onChange={v => { setQData({ ...qData, transactionType: v }) }} allowClear >\n                            <Select.Option value={\"credit\"} >Received</Select.Option>\n                            <Select.Option value={\"debit\"} >Given</Select.Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Select placeholder='Search Company' value={qData.masterAccount} onChange={v => { setQData({ ...qData, masterAccount: v }) }} allowClear >\n                            <Select.Option value={\"SP\"} >S.P</Select.Option>\n                            <Select.Option value={\"SL\"} >S.L</Select.Option>\n                            <Select.Option value={\"SLQR\"} >SL(QR)</Select.Option>\n                            <Select.Option value={\"QS\"} >Q.S</Select.Option>\n                            <Select.Option value={\"PAR\"} >PAR</Select.Option>\n\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 3 }} >\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" block htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} >\n                    {\n\n                        <Form.Item style={{ marginBottom: 0, float: 'right', }}>\n                            <Button type=\"primary\" style={{ marginRight: 8 }} icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm({ transactionType: \"credit\" }) }}> Receiving</Button>\n                            <Button type=\"primary\" icon={<MinusCircleOutlined />} onClick={() => { addNewModalRef.current.openForm({ transactionType: \"debit\" }) }}>Giveing</Button>\n\n                        </Form.Item>\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected Data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n}\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, accounts, balance, accountId = null } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n\n    const handleChange = (value) => {\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n    }\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n\n            setOpen(true);\n            console.log('dt', dt);\n            console.log({ accountId });\n            setData(\n                dt._id\n                    ? { _id: dt._id }\n                    : { transactionType: dt.transactionType, accountId: accountId, date: new Date() }\n            );\n\n        }\n    }));\n\n    useEffect(() => {\n        console.log(11, data);\n    }, [data])\n\n\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data._id).then(res => {\n            setData(res.data || {});\n\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        if (balance < (data.amount) * 1 && data.transactionType === 'debit') {\n            AntdMsg(\"Amount can not be greater than available balance\", 'error');\n            return;\n        }\n        setAjxRequesting(true);\n        service.save(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n\n    const [accountList, setAccountList] = useState([]);\n\n\n    useEffect(() => {\n        const acc = accounts?.map((item) => (\n            {\n                label: item.name,\n                value: item._id,\n            }\n\n        ))\n        setAccountList(acc)\n    }, [accounts])\n\n\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Transaction Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[0, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Account Name\" required>\n                                    <Select\n                                        disabled={accountId}\n                                        showSearch\n                                        allowClear\n                                        placeholder=\"Select an Account\"\n                                        optionFilterProp=\"children\"\n                                        value={data.accountId}\n                                        onChange={v => { handleChange({ accountId: v }) }}\n                                        filterOption={(input, option) =>\n                                            (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\n                                        }\n                                        options={accountList}\n                                    />\n                                </Form.Item>\n                                {data.transactionType === \"debit\" ? <></> : < Form.Item label=\"Company Name\" required>\n\n                                    <Select\n                                        showSearch\n                                        allowClear\n                                        placeholder=\"Select Company\"\n                                        optionFilterProp=\"children\"\n                                        onChange={v => { handleChange({ masterAccount: v }) }}\n                                        filterOption={(input, option) =>\n                                            (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\n                                        }\n                                        options={[\n\n                                            { label: \"S.P\", value: \"SP\" },\n                                            { label: \"SL\", value: \"SL\" },\n                                            { label: \"S.L(PR)\", value: \"SLQR\" },\n                                            { label: \"Q.S\", value: \"QS\" },\n                                            { label: \"PAR\", value: \"PAR\" },\n                                        ]}\n                                    />\n                                </Form.Item>}\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Amount\" required>\n                                    <Input placeholder='Enter Amount' max={balance} type=\"number\" min={0} value={data.amount} onChange={(e) => handleChange({ amount: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Date\" required>\n                                    <DatePicker\n\n                                        format='DD MMM YYYY'\n                                        onChange={(v) => { handleChange({ date: new Date(v) }) }}\n                                        value={dayjs(moment(data.date).format('YYYY-MM-DD'), 'YYYY-MM-DD')}\n                                        className=\"w-100\"\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\n\n\n\nfunction AddExcel(data) {\n    let excelcolumns = [\n        {\n            title: 'Company',\n            dataIndex: 'company',\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n        },\n\n        {\n            title: 'Time',\n            dataIndex: 'time',\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n        },\n\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n        },\n        {\n            title: 'Comission',\n            dataIndex: 'comission',\n        },\n        {\n            title: 'Net Amount',\n            dataIndex: 'netProfit',\n        },\n\n    ]\n\n\n    const excel = new Excel();\n    excel\n        .addSheet(\"test\")\n        .addColumns(excelcolumns)\n        .addDataSource(data.map(v => ({\n            ...v,\n            amount: v.transactionType === \"credit\" ? `+${v.amount}` : `(-)${v.amount}`,\n            name: v.accountDetail.name,\n            company: v.transactionType === \"credit\" ? v.masterAccount : \"---\",\n            date: moment(v.date).format('DD MMM YYYY'),\n            time: moment(v.createdAt).format('HH:mm A'),\n            comission: v.transactionType === \"credit\" ? v.amount * v.comissionPercentage / 100 : \"---\",\n            netProfit: v.transactionType === \"credit\" ? v.amount - (v.amount * v.comissionPercentage / 100) : \"--\"\n        })), {\n            str2Percent: true\n        })\n        .saveAs(\"Excel.xlsx\");\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/account';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport Transaction from './Transaction';\n\nexport default function Account({ type }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n    const transactionModalRef = useRef();\n\n\n    const columns = [\n        {\n            title: '#',\n            width: 44,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 110,\n            render: (v, row) => {\n                return <>\n                    {\n\n                        <Popconfirm\n                            title=\"Are you sure to delete this Account data?\"\n                            onConfirm={() => { deleteData(row._id); }}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                        </Popconfirm>\n                    }\n                    {\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} style={{ marginRight: \"4px\" }} />\n                    }\n                    {\n                        <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { transactionModalRef.current.openForm(row._id) }} />\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        service.list(qData).then(res => {\n\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ margin: 0 }}>List of  Accounts</Typography.Title>\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, type }} />\n            <TransactionModal ref={transactionModalRef} />\n\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col xs={{ span: 24 }} sm={{ span: 4 }} >\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder='Search by name' onChange={(e) => { setQData({ ...qData, key: e.target.value }) }} />\n                    </Form.Item>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 3 }} >\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" block htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 2 }} >\n                    {\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                        </Form.Item>\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected Data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    const handleChange = (value) => { setData({ ...data, ...value }); }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { status: true }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data._id).then(res => {\n            setData(res.data || {});\n\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        service.save(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Account Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={400}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[0, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder='Enter Name' value={data.name} onChange={(e) => handleChange({ name: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\n\nconst TransactionModal = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt);\n        }\n    }));\n    return (\n        <>\n            <Modal\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onCancel={() => { setOpen(false); }}\n                maskClosable={false}\n                width={1600}\n                destroyOnClose\n                className=\"app-modal-body-overflow\"\n                footer={null}\n            >\n                <Transaction accountId={data} />\n            </Modal>\n        </>\n    );\n});\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Spin, Row, Col, Typography, Divider, Switch } from 'antd';\r\n//import { PageHeader } from '@ant-design/pro-layout'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n//import greetingTime from 'greeting-time';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport service from '../../services/user';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n//import UploadImage from '../../../utils/UploadImage';\r\n\r\nexport default function Profile() {\r\n\r\n    const [data, setData] = useState({});\r\n    const [fileList, setFileList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [doSave, setDoSave] = useState(false);\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.profile().then(res => {\r\n            setData(res.data.result || {});\r\n            if (res.data.result?.avatar) {\r\n                setFileList([res.data.result?.avatar]);\r\n            }\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateProfile();\r\n    }, [data]);\r\n\r\n    function updateProfile() {\r\n        if (doSave) {\r\n            setLoading(true);\r\n            service.saveProfile(data).then(res => {\r\n                AntdMsg(res.message);\r\n            }).catch(err => {\r\n                AntdMsg(err.message, 'error');\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleChange(fileList?.[0], 'avatar');\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                {/* <PageHeader\r\n                // title={greetingTime(new Date()) + ', ' + data?.name}\r\n                // extra={[<Switch key={'do-save'} checkedChildren=\"Update\" unCheckedChildren=\"Update\" checked={doSave} onChange={v => { setDoSave(v) }} />]}\r\n                /> */}\r\n                <Divider />\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={16}>\r\n                            <Row gutter={[12, 10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'name'); } }} level={5} >\r\n                                            {data.name}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">User Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'userName'); } }} level={5} >\r\n                                            {data.userName}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Email</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'email'); } }} level={5} >\r\n                                            {data.email}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Phone Number</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'phone'); } }} level={5} >\r\n                                            {data.phone}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {/* <UploadImage {...{ fileList, setFileList }} disabled={!doSave} cropImage /> */}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Spin>\r\n        </>\r\n    );\r\n};","import React from \"react\";\nimport { Card, Layout, Menu } from \"antd\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport Error404 from \"../pages/errors/Error404\";\nimport Dashboard from \"../pages/Dashboard\";\nimport Account from \"../pages/Account\";\nimport Transaction from \"../pages/Transaction\";\nimport Profile from \"../pages/Profile\";\n\n\nexport default function MyLayout() {\n\n    return (\n        <>\n            <Layout style={{ minHeight: '100vh', }}>\n                <Layout className=\"site-layout\" >\n                    <Layout.Header style={{ padding: 0, height: 'auto' }} >\n                        <Menu theme=\"dark\" mode=\"horizontal\" items={[\n\n                            {\n                                label: <Link to={'/dashboard'}>Dashboard</Link>,\n                                key: \"dashboard\"\n                            },\n                            {\n                                label: <Link to={'/accounts'}>Account</Link>,\n                                key: \"accounts\"\n                            },\n\n                            {\n                                label: <Link to={'/transaction'}>Transactions</Link>,\n                                key: \"transaction\"\n                            },\n                            {\n                                label: <Link to={'/profile'}>Profile</Link>,\n                                key: \"profile\"\n                            },\n\n                        ]}>\n                        </Menu>\n                    </Layout.Header>\n\n                    <Layout.Content>\n                        <Card style={{ borderRadius: \"none\" }}>\n                            <Routes>\n\n                                <Route path=\"dashboard/\" element={<Dashboard />} />\n                                <Route path=\"accounts/\" element={<Account />} />\n                                <Route path=\"transaction/\" element={<Transaction />} />\n                                <Route path=\"profile/\" element={<Profile />} />\n                                <Route path={'*'} element={<Error404 />} />\n                            </Routes>\n                        </Card>\n                    </Layout.Content>\n                </Layout>\n            </Layout>\n        </>\n    );\n\n}"],"names":["Error404","status","title","subTitle","extra","to","type","service","data","axios","this","baseURL","params","id","ids","useState","ajxRequesting","setAjxRequesting","accounts","setAccounts","qData","setQData","given","setGiven","received","setReveived","totalcomission","setTotalComission","useEffect","getBalance","serviceAccount","isAll","then","res","map","v","label","name","value","_id","catch","err","message","dt","Object","keys","finally","balance","creditTotal","comission","debitTotal","item","totalAmount","comissionCharge","toFixed","spinning","indicator","LoadingOutlined","style","fontSize","spin","gutter","xs","span","sm","marginBottom","showSearch","allowClear","placeholder","optionFilterProp","accountId","onChange","filterOption","input","option","toLowerCase","includes","width","options","format","e","startTime","Date","endTime","htmlType","block","onClick","marginTop","lg","color","precision","MyPagination","props","total","showTotal","start","page","limit","end","pageSize","current","pp","showSizeChanger","AntdMsg","$msg","$type","Transaction","setData","loading","setLoading","selected","setSelected","setBalance","addNewModalRef","useRef","columns","dataIndex","render","background","textAlign","moment","row","transactionType","amount","comissionPercentage","onConfirm","deleteData","okText","cancelText","size","danger","icon","DeleteOutlined","EditOutlined","openForm","filter","hidden","list","key","tableColumns","ellipsis","fixed","length","tableProps","bordered","Search","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","excelcolumns","Excel","addSheet","addColumns","addDataSource","accountDetail","company","masterAccount","date","time","createdAt","netProfit","str2Percent","saveAs","AddExcel","level","margin","float","pagination","position","dataSource","scroll","y","x","AddForm","ref","accountList","setAccountList","acc","onSubmitCapture","className","marginRight","MinusCircleOutlined","forwardRef","open","setOpen","aspect","handleChange","entries","forEach","ent","varDt","k","split","i","parseInt","useImperativeHandle","console","log","save","detail","top","onOk","okButtonProps","disabled","onCancel","destroyOnClose","maskClosable","layout","required","max","min","target","dayjs","Account","transactionModalRef","EyeOutlined","TransactionModal","Profile","fileList","setFileList","doSave","result","avatar","strong","editable","editing","triggerType","userName","email","phone","MyLayout","minHeight","padding","height","theme","mode","items","borderRadius","path","element"],"sourceRoot":""}