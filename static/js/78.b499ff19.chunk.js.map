{"version":3,"file":"static/js/78.b499ff19.chunk.js","mappings":"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","sources":["views/pages/errors/Error404.js","services/transaction.js","services/account.js","views/pages/Dashboard.js","views/components/Pagination.js","utils/Antd.js","views/pages/Transaction.js","services/listLedger.js","views/pages/AccountTransaction.js","views/pages/Account.js","views/pages/admin/Profile.js","views/layout/Layout.js"],"sourcesContent":["import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'transation';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/save\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n    static balance(data) {\r\n        return axios.get(this.baseURL + '/get-balence', { params: data });\r\n    }\r\n    static updateStatus(data) {\r\n        return axios.post(this.baseURL + \"/update-status\", data);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'account';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/'+id, { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/save\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","import { Card, Col, Row, Statistic, Typography, message, Form, Button, DatePicker, Select, Spin, Space, Progress } from 'antd';\r\nimport { LoadingOutlined, } from '@ant-design/icons';\r\nimport service from '../../services/transaction';\r\nimport serviceAccount from '../../services/account';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Dashboard = () => {\r\n\tconst [ajxRequesting, setAjxRequesting] = useState(false);\r\n\tconst [accounts, setAccounts] = useState([]);\r\n\tconst [qData, setQData] = useState({});\r\n\tconst [given, setGiven] = useState(\"\")\r\n\tconst [received, setReveived] = useState(\"\")\r\n\tconst [totalcomission, setTotalComission] = useState(\"\")\r\n\tconst [sp, setSp] = useState(0)\r\n\tconst [sl, setSl] = useState(\"\")\r\n\tconst [slqr, setSlqr] = useState(\"\")\r\n\tconst [qs, setQs] = useState(\"\")\r\n\tconst [par, setPar] = useState(\"\")\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tsetAjxRequesting(true);\r\n\t\tgetBalance();\r\n\t\tgetTotal()\r\n\t\tserviceAccount.list({ isAll: 1 })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetAccounts(res.data?.map(v => ({ label: v.name, value: v._id })));\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tif (typeof err.message === 'object') {\r\n\t\t\t\t\tlet dt = err.message[Object.keys(err.message)[0]];\r\n\t\t\t\t\tmessage.error(dt);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage.error(err.message);\r\n\t\t\t\t}\r\n\t\t\t}).finally(() => {\r\n\t\t\t\tsetAjxRequesting(false);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\r\n\tconst getTotal = () => {\r\n\t\tsetAjxRequesting(true);\r\n\t\tservice.balance(qData).then((res) => {\r\n\t\t\tlet creditTotal = 0\r\n\t\t\tlet comission = 0\r\n\t\t\tlet debitTotal = 0\r\n\t\t\tres.data.map((item) => {\r\n\t\t\t\tif (item.type === \"credit\") {\r\n\t\t\t\t\tcreditTotal += item.totalAmount\r\n\t\t\t\t\tcomission += item.comissionCharge\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdebitTotal += item.totalAmount\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tsetGiven(debitTotal?.toFixed(2))\r\n\t\t\tsetReveived(creditTotal?.toFixed(2))\r\n\t\t\tsetTotalComission(comission?.toFixed(2))\r\n\r\n\t\t}).finally(() => {\r\n\t\t\tsetAjxRequesting(false);\r\n\t\t});\r\n\t}\r\n\r\n\tconst getBalance = () => {\r\n\t\tgetTotal()\r\n\t\tservice.balance({ ...qData, masterAccount: \"SP\" }).then((res) => {\r\n\t\t\tsetSp(res.data?.[0]?.totalAmount || 0)\r\n\t\t})\r\n\t\tservice.balance({ ...qData, masterAccount: \"SL\" }).then((res) => {\r\n\t\t\tsetSl(res.data?.[0]?.totalAmount || 0)\r\n\t\t})\r\n\t\tservice.balance({ ...qData, masterAccount: \"SLQR\" }).then((res) => {\r\n\t\t\tsetSlqr(res.data?.[0]?.totalAmount || 0)\r\n\t\t})\r\n\t\tservice.balance({ ...qData, masterAccount: \"QS\" }).then((res) => {\r\n\t\t\tsetQs(res.data?.[0]?.totalAmount || 0)\r\n\t\t})\r\n\t\tservice.balance({ ...qData, masterAccount: \"PAR\" }).then((res) => {\r\n\t\t\tsetPar(res.data?.[0]?.totalAmount || 0)\r\n\t\t})\r\n\r\n\t}\r\n\treturn <>\r\n\t\t<Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n\t\t\t<Row gutter={[12, 2]} >\r\n\t\t\t\t<Col xs={{ span: 24 }} sm={{ span: 4 }}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\tallowClear\r\n\t\t\t\t\t\t\tplaceholder=\"Select an Account\"\r\n\t\t\t\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\t\t\t\tvalue={qData.accountId}\r\n\t\t\t\t\t\t\tonChange={(v) => { setQData({ ...qData, accountId: v }) }}\r\n\t\t\t\t\t\t\tfilterOption={(input, option) =>\r\n\t\t\t\t\t\t\t\t(option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\toptions={accounts}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} sm={{ span: 4 }}  >\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: e?.[0] ? new Date(e[0]) : null, endTime: e?.[1] ? new Date(e[1]) : null }) }} />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} sm={{ span: 3 }}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block onClick={() => { getBalance() }}>Search</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row gutter={[20, 20]} style={{ marginTop: \"20px\" }}>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 6 }} >\r\n\t\t\t\t\t<Card hoverable  >\r\n\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#7171eb\", fontSize: \"20px\" }} >Total Amount Received </Typography.Title>} value={`₹ ${received}`} />\r\n\t\t\t\t\t</Card>\r\n\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n\r\n\t\t\t\t\t<Card hoverable >\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#e65050\", fontSize: \"20px\", }} >Total Amount Given</Typography.Title>} value={`₹ ${given}`} />\r\n\t\t\t\t\t</Card>\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n\t\t\t\t\t<Card hoverable >\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"green\", fontSize: \"20px\" }}>Total Comission</Typography.Title>} value={`₹  ${totalcomission}`} />\r\n\t\t\t\t\t</Card>\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 6 }} >\r\n\t\t\t\t\t<Card hoverable  >\r\n\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#7171eb\", fontSize: \"20px\" }} >Total Balance Available </Typography.Title>} value={`₹ ${received - given - totalcomission}`} />\r\n\t\t\t\t\t</Card>\r\n\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t</Row>\r\n\t\t\t<Row gutter={[20, 20]} style={{ marginTop: \"20px\" }}>\r\n\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 12 }}>\r\n\t\t\t\t\t<Card hoverable style={{ border: \"solid 15px #8686e6\" }}>\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#7171eb\", fontSize: \"18px\" }} >Total Amount Received in S.P</Typography.Title>} value={`₹ ${sp}`} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 12 }}>\r\n\t\t\t\t\t<Card hoverable style={{ border: \"solid 15px #7fbe7f\" }}>\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#7171eb\", fontSize: \"18px\" }} >Total Amount Received in S.L</Typography.Title>} value={`₹ ${sl}`} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row >\r\n\t\t\t<Row gutter={[20, 20]} style={{ marginTop: \"20px\" }}>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 12 }}>\r\n\t\t\t\t\t<Card hoverable style={{ border: \"solid 15px #deae56\" }}>\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#7171eb\", color: \"orange\", fontSize: \"18px\" }} >Total Amount Received in S.L(PR)</Typography.Title>} value={`₹ ${slqr}`} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 12 }}>\r\n\t\t\t\t\t<Card hoverable style={{ border: \"solid 15px pink\" }}>\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#7171eb\", fontSize: \"18px\" }} >Total Amount Received in Q.S</Typography.Title>} value={`₹ ${qs}`} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row gutter={[20, 20]} style={{ marginTop: \"20px\" }}>\r\n\t\t\t\t<Col xs={{ span: 24, offset: 0 }} lg={{ span: 12, offset: 6 }} >\r\n\t\t\t\t\t<Card hoverable style={{ border: \"solid 15px #dcdc81\" }}>\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#7171eb\", fontSize: \"18px\" }} >Total Amount Received in P.A.R</Typography.Title>} value={`₹ ${par}`} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\r\n\r\n\r\n\t\t</Spin>\r\n\t</>\r\n}\r\nexport default Dashboard;\r\n","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, forwardRef } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n    DatePicker,\r\n    Checkbox,\r\n    message,\r\n    Upload,\r\n    Modal,\r\n} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nexport function AntdDatepicker(props) {\r\n    let {\r\n        format,\r\n        getFormat = 'YYYY-MM-DD',\r\n        inputReadOnly,\r\n        value,\r\n        defaultValue,\r\n        onChange,\r\n        disablePastDate = false,\r\n        disableUpcomingDate = false,\r\n        ...rest\r\n    } = props;\r\n\r\n\r\n    let otherProps = {};\r\n    if (typeof value !== \"undefined\") {\r\n        // otherProps.value = moment(value).format(format || 'DD MMM YYYY') ? moment(new Date(value)) : null\r\n        otherProps.value = moment(new Date(value ? value : new Date()), format || 'DD MMM YYYY');\r\n    }\r\n    if (typeof defaultValue !== \"undefined\") {\r\n        otherProps.defaultValue = defaultValue ? moment(new Date(defaultValue)) : null\r\n    }\r\n    if (typeof onChange !== \"undefined\") {\r\n        otherProps.onChange = (dt) => {\r\n            onChange(dt ? moment(dt).format(getFormat) : null);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        onChange(moment(value).format(getFormat))\r\n    }, [])\r\n\r\n    return (\r\n        <DatePicker\r\n            format={format || 'DD MMM YYYY'}\r\n            inputReadOnly={inputReadOnly || true}\r\n            disabledDate={(current) => {\r\n                let customDate = moment().format(\"YYYY-MM-DD\");\r\n                if (disablePastDate) {\r\n                    return current && current < moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n                if (disableUpcomingDate) {\r\n                    return current && current > moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n            }}\r\n            {...otherProps}\r\n            {...rest}\r\n            style={{ width: '100%' }}\r\n        />\r\n    )\r\n}\r\n\r\nexport function MultiChechBox(props) {\r\n    const { col = 3 } = props;\r\n    const type = typeof props.value === 'object' ? 'array' : 'string';\r\n\r\n    let [values, setValues] = useState();\r\n    let [options, setOptions] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        const val = typeof e.target.value * 1 !== 'NaN' ? e.target.value + '' : e.target.value * 1;\r\n        if (e.target.checked) {\r\n            values.push(val)\r\n            setValues([...values]);\r\n        } else {\r\n            if (values.indexOf(val) > -1) {\r\n                values.splice(values.indexOf(val), 1);\r\n                setValues([...values])\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (type === 'string') {\r\n            values = props.value ? props.value.split(',').map((v) => v * 1) : [];\r\n            setValues([...values]);\r\n        } else {\r\n            setValues([...props.value]);\r\n        }\r\n    }, [props.value]);\r\n\r\n    useEffect(() => {\r\n        let opts = props.options.map((v, i) => {\r\n            if (v.value) {\r\n                return { value: v.value * 1, label: v.label }\r\n            } else if (v.id) {\r\n                return { value: v.id * 1, label: v.name || v.title || v.label }\r\n            } else if (v._id) {\r\n                return { value: v._id + '', label: v.name || v.title || v.label }\r\n            }\r\n            return null;\r\n        });\r\n        setOptions(opts);\r\n    }, [props.options]);\r\n\r\n    useEffect(() => {\r\n        // if (type === 'string') {\r\n        //     props.onChange(values?.join());\r\n        // } else {\r\n        props.onChange(values)\r\n        // }\r\n    }, [(values || []).join(\",\")])\r\n\r\n    return (\r\n        <div className=\"row mingap\" >\r\n            {\r\n                options.map((v, i) => (\r\n                    <div className={`col-md-${col} mb-2 form-group`} key={i}>\r\n                        <div className=\"border p-1\">\r\n                            <Checkbox\r\n                                value={typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1}\r\n                                checked={values?.includes(typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1)}\r\n                                onChange={handleChange}\r\n                                className=\"mx-0 mr15\"\r\n                            >\r\n                                {v.label}\r\n                            </Checkbox>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport function AntdMsg($msg, $type = 'success') {\r\n    if ($msg) {\r\n        if ($type === 'success')\r\n            message.success($msg);\r\n        if ($type === 'error')\r\n            message.error($msg);\r\n        if ($type === 'warning')\r\n            message.warning($msg);\r\n    }\r\n};\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nconst UploadImage = forwardRef((props, ref) => {\r\n    const { fileCount } = props;\r\n    const fileRef = ref;\r\n    let { files } = props;\r\n    useEffect(() => {\r\n        setFileList(files)\r\n    }, [files])\r\n\r\n    if (files.length) {\r\n        files = files?.map((v, i) => {\r\n            return { uid: i, url: v.url, status: 'done', name: v.name };\r\n        });\r\n    } else {\r\n        files = [];\r\n    }\r\n\r\n\r\n    const [fileList, setFileList] = useState(files);\r\n\r\n    const dummyRequest = ({ file, onSuccess }) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n            if (!fileRef.current.uploadingFiles) {\r\n                fileRef.current.uploadingFiles = [];\r\n            }\r\n            fileRef.current.uploadingFiles?.push(file);\r\n        }, 0);\r\n    };\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewVisible(true);\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const handleChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <Upload\r\n                // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                customRequest={dummyRequest}\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={(value) => {\r\n                    if (value.file.status === 'removed' || value.file.status) {\r\n                        handleChange(value)\r\n                    }\r\n                }}\r\n                beforeUpload={\r\n                    (file) => {\r\n                        if (!file.type.includes('image/')) {\r\n                            message.error('Invalid file type');\r\n                            return false\r\n                        }\r\n                    }\r\n                }\r\n                onRemove={(e) => {\r\n                    if (!fileRef.current.deletingFiles) {\r\n                        fileRef.current.deletingFiles = [];\r\n                    }\r\n                    if (!e.thumbUrl) {\r\n                        fileRef.current.deletingFiles?.push(e);\r\n                    } else {\r\n                        fileRef.current.uploadingFiles = fileRef.current.uploadingFiles.filter((v) => { return v.uid !== e.uid })\r\n                    }\r\n                }}\r\n            >\r\n                {fileList.length >= fileCount ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                open={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    );\r\n})\r\n\r\nexport default UploadImage;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, Switch, message } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/transaction';\r\nimport serviceAccount from '../../services/account';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport { Excel } from \"antd-table-saveas-excel\"\r\nimport moment from 'moment';\r\nimport dayjs from 'dayjs';\r\n\r\n\r\n\r\nexport default function Transaction({ accountId = null }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [balance, setBalance] = useState(0)\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, accountId, startTime1: new Date, endTime1: new Date() });\r\n    const addNewModalRef = useRef();\r\n    const [total, setTotal] = useState(0)\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Company',\r\n            dataIndex: 'masterAccount',\r\n            width: 50,\r\n            render: (v) => {\r\n                if (v === \"SP\") {\r\n                    return <div style={{ background: \"blue\", textAlign: \"center\", color: \"black\" }}>{v}</div>\r\n                }\r\n                else if (v === \"SL\") {\r\n                    return <div style={{ background: \"Green\", textAlign: \"center\", color: \"black\" }}>{v}</div>\r\n                }\r\n                else if (v === \"SLQR\") {\r\n                    return <div style={{ background: \"orange\", textAlign: \"center\", color: \"black\" }}>SL(PR)</div>\r\n                }\r\n                else if (v === \"QS\") {\r\n                    return <div style={{ background: \"pink\", textAlign: \"center\", color: \"black\" }}>{v}</div>\r\n                }\r\n                else if (v === \"PAR\") {\r\n                    return <div style={{ background: \"yellow\", textAlign: \"center\", color: \"black\" }}>{v}</div>\r\n                }\r\n\r\n\r\n            }\r\n        },\r\n\r\n\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            width: 100,\r\n            render: v => moment(v).format('DD MMM YYYY')\r\n        },\r\n\r\n        {\r\n            title: 'Time',\r\n            dataIndex: 'createdAt',\r\n            width: 60,\r\n            render: v => moment(v).format('HH:mm A')\r\n\r\n        },\r\n        {\r\n            title: \"Name\",\r\n\r\n            dataIndex: \"accountDetail\",\r\n            width: 100,\r\n            render: (data) => data?.name\r\n\r\n        },\r\n\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n            width: 80,\r\n            render: (v, row) => row.transactionType === \"credit\" ? <div style={{ background: \"green\", fontSize: \"x-large\", color: \"white\", textAlign: \"center\" }}>  {` ₹${row.amount}`}</div> : <div style={{ background: \"red\", fontSize: \"x-large\", color: \"white\", textAlign: \"center\" }}>{` ₹${row.amount}`}</div>\r\n        },\r\n\r\n        {\r\n            title: 'Comission',\r\n            //dataIndex: 'comissionPercentage',\r\n            width: 80,\r\n            render: (v, data) => data.transactionType === \"credit\" ? <div style={{ fontWeight: \"bold\" }}>₹{data.amount * data.comissionPercentage / 100} </div> : \"---\"\r\n        },\r\n        {\r\n            title: 'Net Amount',\r\n\r\n            width: 80,\r\n            render: (v, data) => data.transactionType === \"credit\" ? <div style={{ fontWeight: \"bold\" }}>₹{data.amount - (data.amount * data.comissionPercentage / 100)}</div> : \"---\"\r\n        },\r\n        {\r\n            title: \"Remark\",\r\n            width: 100,\r\n            dataIndex: \"remark\"\r\n        },\r\n\r\n        {\r\n            title: 'Verify',\r\n            dataIndex: '_id',\r\n            width: 100,\r\n            render: (value, row) => {\r\n                return <>\r\n                    <Switch checkedChildren=\"Verified\" loading={row.ajxRequesting} unCheckedChildren=\"Unverified\" checked={row.status} onChange={(v) => {\r\n                        setData(data.map(vv => {\r\n                            if (vv._id === row._id) {\r\n                                return ({ ...vv, ajxRequesting: true });\r\n                            } else {\r\n                                return vv;\r\n                            }\r\n                        }));\r\n                        service.updateStatus({ _id: row._id, status: v }).then(res => {\r\n                            setData(data.map(vv => {\r\n                                if (vv._id === row._id) {\r\n                                    return ({ ...vv, status: res.data?.status, ajxRequesting: false });\r\n                                } else {\r\n                                    return vv;\r\n                                }\r\n                            }));\r\n                            getBalance();\r\n                            message.success(res.message);\r\n                        }).catch(err => {\r\n                            message.error(err.message)\r\n                        })\r\n                    }} />\r\n                </>\r\n            }\r\n        },\r\n\r\n\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this Account data?\"\r\n                            onConfirm={() => { deleteData(row._id); }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                        </Popconfirm>\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                    }\r\n\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        getBalance()\r\n        service.list(qData).then(res => {\r\n            //   setTotal(res.data?.reduce((item) => ++item.amount, [0]))\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, accounts, accountId }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n        getBalance()\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    useEffect(() => {\r\n        serviceAccount.list({ isAll: 1 })\r\n            .then(res => {\r\n                setAccounts(res.data);\r\n            })\r\n            .catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            })\r\n    }, []);\r\n\r\n\r\n    const getBalance = () => {\r\n        service.balance().then((res) => {\r\n            let creditTotal = 0\r\n            let comission = 0\r\n            let debitTotal = 0\r\n            res.data?.map((item) => {\r\n                if (item.type === \"credit\") {\r\n                    creditTotal += item.totalAmount\r\n                    comission += item.comissionCharge\r\n\r\n                } else {\r\n                    debitTotal += item.totalAmount\r\n\r\n                }\r\n            })\r\n\r\n            setBalance((creditTotal - comission - debitTotal)?.toFixed(2))\r\n\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={{ span: 4 }} sm={{ span: 12 }} lg={{ span: 4 }}>\r\n                    <Button onClick={() => AddExcel(data)}>Download in Excel</Button>\r\n\r\n                </Col>\r\n            </Row>\r\n            <Typography.Title level={5} style={{ margin: 0 }}>\r\n                <span>\r\n                    List of All Transactions\r\n                </span>\r\n                <span style={{ color: 'red', float: 'right' }}>\r\n                    Available Balance ₨ {balance}\r\n                </span>\r\n            </Typography.Title>\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 100px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, accounts, balance, accountId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, accountId, qData, setQData, list, accounts, }) {\r\n\r\n    const [accountList, setAccountList] = useState([]);\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        const acc = accounts?.map((item) => (\r\n            {\r\n                label: item.name,\r\n                value: item._id,\r\n            }\r\n\r\n        ))\r\n        setAccountList(acc)\r\n    }, [accounts])\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {\r\n                    accountId\r\n                        ? null\r\n                        : <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\r\n                            <Form.Item style={{ marginBottom: 0 }}>\r\n                                <Select\r\n                                    showSearch\r\n                                    allowClear\r\n                                    placeholder=\"Select an Account\"\r\n                                    optionFilterProp=\"children\"\r\n                                    onChange={(e) => onChange(e, \"accountId\")}\r\n                                    filterOption={(input, option) =>\r\n                                        (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                                    }\r\n                                    options={accountList}\r\n                                />\r\n                            </Form.Item>\r\n                        </Col>\r\n                }\r\n\r\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: e?.[0] ? new Date(e[0]) : null, endTime: e?.[1] ? new Date(e[1]) : null }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select placeholder='Received or Given' value={qData.transactionType} onChange={v => { setQData({ ...qData, transactionType: v }) }} allowClear >\r\n                            <Select.Option value={\"credit\"} >Received</Select.Option>\r\n                            <Select.Option value={\"debit\"} >Given</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select placeholder='Search Company' value={qData.masterAccount} onChange={v => { setQData({ ...qData, masterAccount: v }) }} allowClear >\r\n                            <Select.Option value={\"SP\"} >S.P</Select.Option>\r\n                            <Select.Option value={\"SL\"} >S.L</Select.Option>\r\n                            <Select.Option value={\"SLQR\"} >SL(QR)</Select.Option>\r\n                            <Select.Option value={\"QS\"} >Q.S</Select.Option>\r\n                            <Select.Option value={\"PAR\"} >PAR</Select.Option>\r\n\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Item  >\r\n                        <Input placeholder=' Search by remark' value={qData.remark} onChange={v => { setQData({ ...qData, remark: v.target.value }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 3 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" block htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} >\r\n                    {\r\n\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right', }}>\r\n                            <Button type=\"primary\" style={{ marginRight: 8 }} icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm({ transactionType: \"credit\" }) }}> Receiving</Button>\r\n                            <Button type=\"primary\" style={{ background: \"red\" }} icon={<MinusCircleOutlined />} onClick={() => { addNewModalRef.current.openForm({ transactionType: \"debit\" }) }}>Giving</Button>\r\n\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, accounts, balance, accountId = null } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt._id\r\n                    ? { _id: dt._id }\r\n                    : { transactionType: dt.transactionType, accountId: accountId, date: new Date() }\r\n            );\r\n\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        if (balance < (data.amount) * 1 && data.transactionType === 'debit') {\r\n            AntdMsg(\"Amount can not be greater than available balance\", 'error');\r\n            return;\r\n        }\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    const [accountList, setAccountList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const acc = accounts?.map((item) => (\r\n            {\r\n                label: item.name,\r\n                value: item._id,\r\n            }\r\n\r\n        ))\r\n        setAccountList(acc)\r\n    }, [accounts])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Transaction Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[0, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Account Name\" required>\r\n                                    <Select\r\n                                        disabled={accountId}\r\n                                        showSearch\r\n                                        allowClear\r\n                                        placeholder=\"Select an Account\"\r\n                                        optionFilterProp=\"children\"\r\n                                        value={data.accountId}\r\n                                        onChange={v => { handleChange({ accountId: v }) }}\r\n                                        filterOption={(input, option) =>\r\n                                            (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                                        }\r\n                                        options={accountList}\r\n                                    />\r\n                                </Form.Item>\r\n                                {data.transactionType === \"debit\" ? <></> : < Form.Item label=\"Company Name\" required>\r\n\r\n                                    <Select\r\n                                        showSearch\r\n                                        allowClear\r\n                                        placeholder=\"Select Company\"\r\n                                        optionFilterProp=\"children\"\r\n                                        onChange={v => { handleChange({ masterAccount: v }) }}\r\n                                        filterOption={(input, option) =>\r\n                                            (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                                        }\r\n                                        value={data.masterAccount}\r\n                                        options={[\r\n\r\n                                            { label: \"S.P\", value: \"SP\" },\r\n                                            { label: \"SL\", value: \"SL\" },\r\n                                            { label: \"S.L(PR)\", value: \"SLQR\" },\r\n                                            { label: \"Q.S\", value: \"QS\" },\r\n                                            { label: \"PAR\", value: \"PAR\" },\r\n                                        ]}\r\n                                    />\r\n                                </Form.Item>}\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Amount\" required>\r\n                                    <Input placeholder='Enter Amount' max={balance} type=\"number\" min={0} value={data.amount} onChange={(e) => handleChange({ amount: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Remark\" required>\r\n                                    <Input placeholder='Remark' value={data.remark} onChange={(e) => handleChange({ remark: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Date\" required>\r\n                                    <DatePicker\r\n\r\n                                        format='DD MMM YYYY'\r\n                                        onChange={(v) => { handleChange({ date: new Date(v) }) }}\r\n                                        value={dayjs(moment(data.date).format('YYYY-MM-DD'), 'YYYY-MM-DD')}\r\n                                        className=\"w-100\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\nfunction AddExcel(data) {\r\n    let excelcolumns = [\r\n        {\r\n            title: 'Company',\r\n            dataIndex: 'company',\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n        },\r\n\r\n        {\r\n            title: 'Time',\r\n            dataIndex: 'time',\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n        },\r\n        {\r\n            title: 'Comission',\r\n            dataIndex: 'comission',\r\n        },\r\n        {\r\n            title: 'Net Amount',\r\n            dataIndex: 'netProfit',\r\n        },\r\n\r\n    ]\r\n\r\n\r\n    const excel = new Excel();\r\n    excel\r\n        .addSheet(\"test\")\r\n        .addColumns(excelcolumns)\r\n        .addDataSource(data.map(v => ({\r\n            ...v,\r\n            amount: v.transactionType === \"credit\" ? `+${v.amount}` : `(-)${v.amount}`,\r\n            name: v.accountDetail.name,\r\n            company: v.transactionType === \"credit\" ? v.masterAccount : \"---\",\r\n            date: moment(v.date).format('DD MMM YYYY'),\r\n            time: moment(v.createdAt).format('HH:mm A'),\r\n            comission: v.transactionType === \"credit\" ? v.amount * v.comissionPercentage / 100 : \"---\",\r\n            netProfit: v.transactionType === \"credit\" ? v.amount - (v.amount * v.comissionPercentage / 100) : \"--\"\r\n        })), {\r\n            str2Percent: true\r\n        })\r\n        .saveAs(\"Excel.xlsx\");\r\n}\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'transation';\r\n\r\n\r\n    static listLedger(data) {\r\n        return axios.get(this.baseURL + '/list-ledger/', { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/list-ledger\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/list-ledger', { ids: id });\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/listLedger';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport moment from 'moment';\r\nimport dayjs from 'dayjs';\r\n\r\nexport default function AccountTransaction({ accountId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, accountId });\r\n    const addNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            width: 200,\r\n            render: v => moment(v).format('DD MMM YYYY')\r\n        },\r\n        {\r\n            title: 'Remarks',\r\n            dataIndex: 'remark',\r\n            width: 300,\r\n        },\r\n        {\r\n            title: 'Debit',\r\n            dataIndex: 'amount',\r\n            width: 150,\r\n            render: (v, row) => row.transactionType === 'debit' ? v.toFixed(2) : ''\r\n        },\r\n        {\r\n            title: 'Credit',\r\n            dataIndex: 'amount',\r\n            width: 150,\r\n            render: (v, row) => row.transactionType === 'credit' ? v.toFixed(2) : ''\r\n        },\r\n\r\n        {\r\n            title: \"Balance\",\r\n\r\n            width: 150,\r\n            render: (v, row) => row.previousCreditAmount - row.previousDebitAmount\r\n        },\r\n\r\n\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listLedger(qData).then(res => {\r\n\r\n\r\n\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        size: 'small',\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Typography.Title level={5} style={{ margin: 0 }}>List of  Transactions</Typography.Title> */}\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: e?.[0] ? new Date(e[0]) : null, endTime: e?.[1] ? new Date(e[1]) : null }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={10}>\r\n                    {/* {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                        </Form.Item>\r\n                    } */}\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/account';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport Transaction from './Transaction';\r\nimport AccountTransaction from './AccountTransaction';\r\n\r\nexport default function Account({ type }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const transactionModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 44,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: \"Initial Amount\",\r\n            dataIndex: \"initialAmount\"\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 110,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this Account data?\"\r\n                            onConfirm={() => { deleteData(row._id); }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                        </Popconfirm>\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} style={{ marginRight: \"4px\" }} />\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { transactionModalRef.current.openForm({ _id: row._id, name: row.name }) }} />\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ margin: 0 }}>List of  Accounts</Typography.Title>\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type }} />\r\n            <TransactionModal ref={transactionModalRef} />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={{ span: 24 }} sm={{ span: 4 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder='Search by name' onChange={(e) => { setQData({ ...qData, key: e.target.value }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 3 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" block htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 2 }} >\r\n                    {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => { setData({ ...data, ...value }); }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Account Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={400}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[0, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder='Enter Name' value={data.name} onChange={(e) => handleChange({ name: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Initial Amount\" required>\r\n                                    <Input placeholder='initialAmount' value={data.initialAmount} onChange={(e) => handleChange({ initialAmount: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nconst TransactionModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : {}\r\n            );\r\n        }\r\n    }));\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>Ledger of <span style={{ color: 'red' }}>{data.name}</span></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1600}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <AccountTransaction accountId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Spin, Row, Col, Typography, Divider, Switch } from 'antd';\r\n//import { PageHeader } from '@ant-design/pro-layout'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n//import greetingTime from 'greeting-time';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport service from '../../../services/user';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n//import UploadImage from '../../../utils/UploadImage';\r\n\r\nexport default function Profile() {\r\n\r\n    const [data, setData] = useState({});\r\n    const [fileList, setFileList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [doSave, setDoSave] = useState(false);\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.profile().then(res => {\r\n            setData(res.data.result || {});\r\n            if (res.data.result?.avatar) {\r\n                setFileList([res.data.result?.avatar]);\r\n            }\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateProfile();\r\n    }, [data]);\r\n\r\n    function updateProfile() {\r\n        if (doSave) {\r\n            setLoading(true);\r\n            service.saveProfile(data).then(res => {\r\n                AntdMsg(res.message);\r\n            }).catch(err => {\r\n                AntdMsg(err.message, 'error');\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleChange(fileList?.[0], 'avatar');\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                {/* <PageHeader\r\n                // title={greetingTime(new Date()) + ', ' + data?.name}\r\n                // extra={[<Switch key={'do-save'} checkedChildren=\"Update\" unCheckedChildren=\"Update\" checked={doSave} onChange={v => { setDoSave(v) }} />]}\r\n                /> */}\r\n                <Divider />\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={16}>\r\n                            <Row gutter={[12, 10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'name'); } }} level={5} >\r\n                                            {data.name}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">User Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'userName'); } }} level={5} >\r\n                                            {data.userName}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Email</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'email'); } }} level={5} >\r\n                                            {data.email}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Phone Number</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'phone'); } }} level={5} >\r\n                                            {data.phone}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {/* <UploadImage {...{ fileList, setFileList }} disabled={!doSave} cropImage /> */}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Spin>\r\n        </>\r\n    );\r\n};","import React from \"react\";\r\nimport { Card, Layout, Menu } from \"antd\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\nimport Dashboard from \"../pages/Dashboard\";\r\nimport Account from \"../pages/Account\";\r\nimport Transaction from \"../pages/Transaction\";\r\nimport Profile from \"../pages/admin/Profile\";\r\n\r\n\r\nexport default function MyLayout() {\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh', }}>\r\n                <Layout className=\"site-layout\" >\r\n                    <Layout.Header style={{ padding: 0, height: 'auto' }} >\r\n                        <Menu theme=\"dark\" mode=\"horizontal\" items={[\r\n\r\n                            {\r\n                                label: <Link to={'/dashboard'}>Dashboard</Link>,\r\n                                key: \"dashboard\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/accounts'}>Account</Link>,\r\n                                key: \"accounts\"\r\n                            },\r\n\r\n                            {\r\n                                label: <Link to={'/transaction'}>Transactions</Link>,\r\n                                key: \"transaction\"\r\n                            },\r\n                            {\r\n                                label: <span style={{ color: 'red' }} onClick={() => { localStorage.clear(); window.location.reload(); }}>Logout</span>,\r\n                                key: \"transaction\"\r\n                            },\r\n                            // {\r\n                            //     label: <Link to={'/profile'}>Profile</Link>,\r\n                            //     key: \"profile\"\r\n                            // },\r\n\r\n                        ]}>\r\n                        </Menu>\r\n                    </Layout.Header>\r\n\r\n                    <Layout.Content>\r\n                        <Card style={{ borderRadius: \"none\" }}>\r\n                            <Routes>\r\n\r\n                                <Route path=\"dashboard/\" element={<Dashboard />} />\r\n                                <Route path=\"accounts/\" element={<Account />} />\r\n                                <Route path=\"transaction/\" element={<Transaction />} />\r\n                                <Route path=\"profile/\" element={<Profile />} />\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["Error404","status","title","subTitle","extra","to","type","service","data","axios","this","baseURL","params","id","ids","useState","ajxRequesting","setAjxRequesting","accounts","setAccounts","qData","setQData","given","setGiven","received","setReveived","totalcomission","setTotalComission","sp","setSp","sl","setSl","slqr","setSlqr","qs","setQs","par","setPar","useEffect","getBalance","getTotal","serviceAccount","isAll","then","res","map","v","label","name","value","_id","catch","err","message","dt","Object","keys","finally","balance","creditTotal","comission","debitTotal","item","totalAmount","comissionCharge","toFixed","masterAccount","spinning","indicator","LoadingOutlined","style","fontSize","spin","gutter","xs","span","sm","marginBottom","showSearch","allowClear","placeholder","optionFilterProp","accountId","onChange","filterOption","input","option","toLowerCase","includes","width","options","format","e","startTime","Date","endTime","htmlType","block","onClick","marginTop","lg","hoverable","color","border","offset","MyPagination","props","total","showTotal","start","page","limit","end","pageSize","current","pp","showSizeChanger","AntdMsg","$msg","$type","Transaction","setData","loading","setLoading","selected","setSelected","setBalance","startTime1","endTime1","addNewModalRef","useRef","columns","dataIndex","render","background","textAlign","moment","row","transactionType","amount","fontWeight","comissionPercentage","checkedChildren","unCheckedChildren","checked","vv","updateStatus","onConfirm","deleteData","okText","cancelText","size","danger","icon","DeleteOutlined","EditOutlined","openForm","filter","hidden","list","key","tableColumns","ellipsis","fixed","length","tableProps","bordered","Search","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","excelcolumns","Excel","addSheet","addColumns","addDataSource","accountDetail","company","date","time","createdAt","netProfit","str2Percent","saveAs","AddExcel","level","margin","float","pagination","position","dataSource","scroll","y","x","AddForm","ref","accountList","setAccountList","acc","onSubmitCapture","className","remark","target","marginRight","MinusCircleOutlined","forwardRef","open","setOpen","aspect","handleChange","entries","forEach","ent","varDt","k","split","i","parseInt","useImperativeHandle","save","detail","top","onOk","okButtonProps","disabled","onCancel","destroyOnClose","maskClosable","layout","required","max","min","dayjs","AccountTransaction","previousCreditAmount","previousDebitAmount","Account","transactionModalRef","EyeOutlined","TransactionModal","initialAmount","Profile","fileList","setFileList","doSave","result","avatar","strong","editable","editing","triggerType","userName","email","phone","MyLayout","minHeight","padding","height","theme","mode","items","localStorage","clear","window","location","reload","borderRadius","path","element"],"sourceRoot":""}