{"version":3,"file":"static/js/690.b849ad80.chunk.js","mappings":"yTAMe,SAASA,IACpB,OAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAC5B,GAA0CJ,EAAAA,EAAAA,WAAS,GAAM,eAAlDK,EAAa,KAAEC,EAAgB,KAmBtC,OACI,+BACI,SAAC,IAAG,CAACC,QAAQ,eAAeC,MAAM,MAAMC,MAAO,CAAEC,gBAAiB,YAAaC,gBAAiB,uEAAwEC,OAAQ,QAASC,WAAY,GAAIC,iBAAkB,aAAc,UACrO,SAAC,IAAG,CAACL,MAAO,CAAEC,gBAAiB,QAASK,QAAS,YAC7CC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IACZE,GAAI,CAAEF,KAAM,IAAK,UAEjB,UAAC,IAAG,CAACG,OAAQ,CAAC,GAAI,IAAKZ,MAAM,SAASD,QAAQ,eAAc,WACxD,SAAC,IAAG,WACA,SAAC,IAAK,CAACc,IAAI,0EAA0EC,SAAS,EAAOC,MAAO,aAEhH,SAAC,IAAG,WACA,SAAC,IAAI,CAACC,SAAUnB,EAAeoB,WAAW,SAAC,IAAe,CAAChB,MAAO,CAAEiB,SAAU,IAAMC,MAAI,IAAI,UACxF,iBAAMC,SAAU,SAAAC,GAAOA,EAAEC,gBAAkB,EAAGC,aAAa,MAAMC,YAAY,EAAM,UAC/E,UAAC,IAAI,CAACC,WAAW,EAAMC,UAAW,CAAEX,MAAO,KAAM,WAC7C,SAAC,UAAgB,CAACY,MAAO,EAAG1B,MAAO,CAAE2B,UAAW,UAAW,SAAC,aAC5D,SAAC,IAAK,CACF3B,MAAO,CAAE4B,OAAQ,YACjBC,KAAK,SACLC,QAAQ,SAAC,IAAY,IACrBC,MAAOvC,EACPwC,SAAU,SAACZ,GAAQ3B,EAAY2B,EAAEa,OAAOF,MAAO,EAC/CG,YAAY,mBAChB,SAAC,aAAc,CACXlC,MAAO,CAAE4B,OAAQ,YACjBC,KAAK,SACLC,QAAQ,SAAC,IAAY,IACrBC,MAAOrC,EACPsC,SAAU,SAACZ,GAAQzB,EAAYyB,EAAEa,OAAOF,MAAO,EAC/CG,YAAY,cAChB,SAAC,IAAM,CAACC,OAAK,EAACC,KAAK,UAAUC,SAAS,SAASC,QAAS,kBA/CxFzC,GAAiB,QACjB0C,EAAAA,EAAAA,MAAc,CAAEC,KAAMhD,EAAUE,SAAUA,IAAY+C,MAAK,SAAAC,GACvDC,EAAAA,GAAAA,QAAgBD,EAAIC,SACpBC,EAAAA,EAAAA,YAAiBF,EAAIG,MACrBC,OAAOC,SAASC,QACpB,IAAGC,OAAM,SAACC,GACqB,kBAAhBA,EAAIP,QACXA,EAAAA,GAAAA,MAAcO,EAAIP,QAAQQ,OAAOC,KAAKF,EAAIP,SAAS,IAAI,IAEvDA,EAAAA,GAAAA,MAAcO,EAAIP,QAE1B,IAAGU,SAAQ,WACPxD,GAAiB,EACrB,GAkCqG,EAAEG,MAAO,CAAE4B,OAAQ,YAAa,SAAC,2BAW9I,C","sources":["views/pages/Login.js"],"sourcesContent":["import { Input, Button, Spin, Row, Col, Typography, Image, Card, message } from 'antd';\r\nimport { UserOutlined, LockOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\nimport service from '../../services/user';\r\nimport util from '../../utils/util';\r\n\r\nexport default function Login() {\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const login = () => {\r\n        setAjxRequesting(true);\r\n        service.login({ code: userName, password: password }).then(res => {\r\n            message.success(res.message);\r\n            util.setUserData(res.data);\r\n            window.location.reload();\r\n        }).catch((err) => {\r\n            if (typeof err.message !== 'string') {\r\n                message.error(err.message[Object.keys(err.message)[0]][0]);\r\n            } else {\r\n                message.error(err.message);\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"space-around\" align=\"top\" style={{ backgroundColor: \"#fa680900\", backgroundImage: \"url('https://www.allkeyedup.com.au/wp-content/uploads/login-bg.png')\", height: '100vh', paddingTop: 60, backgroundRepeat: 'no-repeat' }}>\r\n                <Col style={{ backgroundColor: 'white', padding: '50px 0px' }}\r\n                    xs={{ span: 22 }}\r\n                    lg={{ span: 14 }}\r\n                    xl={{ span: 10 }}\r\n                >\r\n                    <Row gutter={[60, 60]} align=\"middle\" justify=\"space-around\">\r\n                        <Col>\r\n                            <Image src=\"https://i.pinimg.com/736x/f2/be/0a/f2be0a43cdf09b025bef223dfc68d822.jpg\" preview={false} width={'200px'} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                                <form onSubmit={e => { e.preventDefault(); }} autoComplete=\"off\" spellCheck={false}>\r\n                                    <Card hoverable={true} bodyStyle={{ width: 280 }}>\r\n                                        <Typography.Title level={3} style={{ textAlign: 'center' }}>Welcome</Typography.Title>\r\n                                        <Input\r\n                                            style={{ margin: '10px 0px' }}\r\n                                            size=\"middle\"\r\n                                            prefix={<UserOutlined />}\r\n                                            value={userName}\r\n                                            onChange={(e) => { setUserName(e.target.value) }}\r\n                                            placeholder=\"Employee Code\" />\r\n                                        <Input.Password\r\n                                            style={{ margin: '10px 0px' }}\r\n                                            size=\"middle\"\r\n                                            prefix={<LockOutlined />}\r\n                                            value={password}\r\n                                            onChange={(e) => { setPassword(e.target.value) }}\r\n                                            placeholder=\"Password\" />\r\n                                        <Button block type=\"primary\" htmlType=\"submit\" onClick={() => login()} style={{ margin: '10px 0px' }}>Login</Button>\r\n                                    </Card>\r\n                                </form>\r\n                            </Spin>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};"],"names":["Login","useState","userName","setUserName","password","setPassword","ajxRequesting","setAjxRequesting","justify","align","style","backgroundColor","backgroundImage","height","paddingTop","backgroundRepeat","padding","xs","span","lg","xl","gutter","src","preview","width","spinning","indicator","fontSize","spin","onSubmit","e","preventDefault","autoComplete","spellCheck","hoverable","bodyStyle","level","textAlign","margin","size","prefix","value","onChange","target","placeholder","block","type","htmlType","onClick","service","code","then","res","message","util","data","window","location","reload","catch","err","Object","keys","finally"],"sourceRoot":""}