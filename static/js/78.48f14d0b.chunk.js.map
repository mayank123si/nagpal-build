{"version":3,"file":"static/js/78.48f14d0b.chunk.js","mappings":"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","sources":["views/pages/errors/Error404.js","services/transaction.js","services/account.js","views/pages/Dashboard.js","views/components/Pagination.js","utils/Antd.js","views/pages/Transaction.js","services/listLedger.js","views/pages/AccountTransaction.js","views/pages/Account.js","views/pages/admin/Profile.js","views/layout/Layout.js"],"sourcesContent":["import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'transation';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/save\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n    static balance(data) {\r\n        return axios.get(this.baseURL + '/get-balence', { params: data });\r\n    }\r\n    static updateStatus(data) {\r\n        return axios.post(this.baseURL + \"/update-status\", data);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'account';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/'+id, { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/save\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","import { Card, Col, Row, Statistic, Typography, message, Form, Button, DatePicker, Select, Spin, Space, Progress } from 'antd';\r\nimport { LoadingOutlined, } from '@ant-design/icons';\r\nimport service from '../../services/transaction';\r\nimport serviceAccount from '../../services/account';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Dashboard = () => {\r\n\tconst [ajxRequesting, setAjxRequesting] = useState(false);\r\n\tconst [accounts, setAccounts] = useState([]);\r\n\tconst [qData, setQData] = useState({startTime: new Date(), endTime: new Date()});\r\n\tconst [given, setGiven] = useState(\"\")\r\n\tconst [received, setReveived] = useState(\"\")\r\n\tconst [totalcomission, setTotalComission] = useState(\"\")\r\n\tconst [sp, setSp] = useState(0)\r\n\tconst [spCount, setSpCount] = useState(0)\r\n\tconst [slCount, setSlCount] = useState(0)\r\n\tconst [slqrCount, setSlqrCount] = useState(0)\r\n\tconst [qsCount, setQsCount] = useState(0)\r\n\tconst [parCount, setParCount] = useState(0)\r\n\tconst [sl, setSl] = useState(\"\")\r\n\tconst [slqr, setSlqr] = useState(\"\")\r\n\tconst [qs, setQs] = useState(\"\")\r\n\tconst [par, setPar] = useState(\"\")\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tsetAjxRequesting(true);\r\n\t\tgetBalance();\r\n\t\tgetTotal()\r\n\t\tserviceAccount.list({ isAll: 1 })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetAccounts(res.data?.map(v => ({ label: v.name, value: v._id })));\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tif (typeof err.message === 'object') {\r\n\t\t\t\t\tlet dt = err.message[Object.keys(err.message)[0]];\r\n\t\t\t\t\tmessage.error(dt);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage.error(err.message);\r\n\t\t\t\t}\r\n\t\t\t}).finally(() => {\r\n\t\t\t\tsetAjxRequesting(false);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\r\n\tconst getTotal = () => {\r\n\t\tsetAjxRequesting(true);\r\n\t\tservice.balance(qData).then((res) => {\r\n\t\t\tlet creditTotal = 0\r\n\t\t\tlet comission = 0\r\n\t\t\tlet debitTotal = 0\r\n\t\t\tres.data.map((item) => {\r\n\t\t\t\tif (item.type === \"credit\") {\r\n\t\t\t\t\tcreditTotal += item.totalAmount\r\n\t\t\t\t\tcomission += item.comissionCharge\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdebitTotal += item.totalAmount\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tsetGiven(debitTotal?.toFixed(2))\r\n\t\t\tsetReveived(creditTotal?.toFixed(2))\r\n\t\t\tsetTotalComission(comission?.toFixed(2))\r\n\r\n\t\t}).finally(() => {\r\n\t\t\tsetAjxRequesting(false);\r\n\t\t});\r\n\t}\r\n\r\n\tconst getBalance = () => {\r\n\t\tgetTotal()\r\n\t\tservice.balance({ ...qData, masterAccount: \"SP\" }).then((res) => {\r\n\t\t\tsetSp(res.data?.[0]?.totalAmount || 0);\r\n\t\t\tsetSpCount(res.data?.[0]?.totalCount || 0);\r\n\t\t})\r\n\t\tservice.balance({ ...qData, masterAccount: \"SL\" }).then((res) => {\r\n\t\t\tsetSl(res.data?.[0]?.totalAmount || 0);\r\n\t\t\tsetSlCount(res.data?.[0]?.totalCount || 0);\r\n\t\t})\r\n\t\tservice.balance({ ...qData, masterAccount: \"SLQR\" }).then((res) => {\r\n\t\t\tsetSlqr(res.data?.[0]?.totalAmount || 0);\r\n\t\t\tsetSlqrCount(res.data?.[0]?.totalCount || 0);\r\n\t\t})\r\n\t\tservice.balance({ ...qData, masterAccount: \"QS\" }).then((res) => {\r\n\t\t\tsetQs(res.data?.[0]?.totalAmount || 0);\r\n\t\t\tsetQsCount(res.data?.[0]?.totalCount || 0);\r\n\t\t})\r\n\t\tservice.balance({ ...qData, masterAccount: \"PAR\" }).then((res) => {\r\n\t\t\tsetPar(res.data?.[0]?.totalAmount || 0);\r\n\t\t\tsetParCount(res.data?.[0]?.totalCount || 0);\r\n\t\t})\r\n\r\n\t}\r\n\treturn <>\r\n\t\t<Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n\t\t\t<Row gutter={[12, 2]} >\r\n\t\t\t\t<Col xs={{ span: 24 }} sm={{ span: 4 }}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\tallowClear\r\n\t\t\t\t\t\t\tplaceholder=\"Select an Account\"\r\n\t\t\t\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\t\t\t\tvalue={qData.accountId}\r\n\t\t\t\t\t\t\tonChange={(v) => { setQData({ ...qData, accountId: v }) }}\r\n\t\t\t\t\t\t\tfilterOption={(input, option) =>\r\n\t\t\t\t\t\t\t\t(option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\toptions={accounts}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} sm={{ span: 4 }}  >\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: e?.[0] ? new Date(e[0]) : null, endTime: e?.[1] ? new Date(e[1]) : null }) }} />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} sm={{ span: 3 }}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block onClick={() => { getBalance() }}>Search</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row gutter={[20, 20]} style={{ marginTop: \"20px\" }}>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 6 }} >\r\n\t\t\t\t\t<Card hoverable  >\r\n\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#7171eb\", fontSize: \"20px\" }} >Total Amount Received </Typography.Title>} value={`₹ ${received}`} />\r\n\t\t\t\t\t</Card>\r\n\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n\r\n\t\t\t\t\t<Card hoverable >\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#e65050\", fontSize: \"20px\", }} >Total Amount Given</Typography.Title>} value={`₹ ${given}`} />\r\n\t\t\t\t\t</Card>\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 6 }}>\r\n\t\t\t\t\t<Card hoverable >\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"green\", fontSize: \"20px\" }}>Total Comission</Typography.Title>} value={`₹  ${totalcomission}`} />\r\n\t\t\t\t\t</Card>\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 6 }} >\r\n\t\t\t\t\t<Card hoverable  >\r\n\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#7171eb\", fontSize: \"20px\" }} >Total Balance Available </Typography.Title>} value={`₹ ${received - given - totalcomission}`} />\r\n\t\t\t\t\t</Card>\r\n\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t</Row>\r\n\t\t\t<Row gutter={[20, 20]} style={{ marginTop: \"20px\" }}>\r\n\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 12 }}>\r\n\t\t\t\t\t<Card hoverable style={{ border: \"solid 15px #8686e6\" }}>\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \" #8686e6\", fontSize: \"18px\" }} >Total Amount Received in SP ({spCount})</Typography.Title>} value={`₹ ${sp}`} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 12 }}>\r\n\t\t\t\t\t<Card hoverable style={{ border: \"solid 15px #7fbe7f\" }}>\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#7fbe7f\", fontSize: \"18px\" }} >Total Amount Received in SOUL ({slCount})</Typography.Title>} value={`₹ ${sl}`} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row >\r\n\t\t\t<Row gutter={[20, 20]} style={{ marginTop: \"20px\" }}>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 12 }}>\r\n\t\t\t\t\t<Card hoverable style={{ border: \"solid 15px #deae56\" }}>\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#deae56\", color: \"orange\", fontSize: \"18px\" }} >Total Amount Received in SL(QR)  ({slqrCount})</Typography.Title>} value={`₹ ${slqr}`} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={{ span: 24 }} lg={{ span: 12 }}>\r\n\t\t\t\t\t<Card hoverable style={{ border: \"solid 15px pink\" }}>\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"pink\", fontSize: \"18px\" }} >Total Amount Received in QS  ({qsCount})</Typography.Title>} value={`₹ ${qs}`} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row gutter={[20, 20]} style={{ marginTop: \"20px\" }}>\r\n\t\t\t\t<Col xs={{ span: 24, offset: 0 }} lg={{ span: 12, offset: 6 }} >\r\n\t\t\t\t\t<Card hoverable style={{ border: \"solid 15px #dcdc81\" }}>\r\n\t\t\t\t\t\t<Statistic title={<Typography.Title style={{ color: \"#bbbb06\", fontSize: \"18px\" }} >Total Amount Received in SELF({parCount})</Typography.Title>} value={`₹ ${par}`} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\r\n\r\n\r\n\t\t</Spin>\r\n\t</>\r\n}\r\nexport default Dashboard;\r\n","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, forwardRef } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n    DatePicker,\r\n    Checkbox,\r\n    message,\r\n    Upload,\r\n    Modal,\r\n} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nexport function AntdDatepicker(props) {\r\n    let {\r\n        format,\r\n        getFormat = 'YYYY-MM-DD',\r\n        inputReadOnly,\r\n        value,\r\n        defaultValue,\r\n        onChange,\r\n        disablePastDate = false,\r\n        disableUpcomingDate = false,\r\n        ...rest\r\n    } = props;\r\n\r\n\r\n    let otherProps = {};\r\n    if (typeof value !== \"undefined\") {\r\n        // otherProps.value = moment(value).format(format || 'DD MMM YYYY') ? moment(new Date(value)) : null\r\n        otherProps.value = moment(new Date(value ? value : new Date()), format || 'DD MMM YYYY');\r\n    }\r\n    if (typeof defaultValue !== \"undefined\") {\r\n        otherProps.defaultValue = defaultValue ? moment(new Date(defaultValue)) : null\r\n    }\r\n    if (typeof onChange !== \"undefined\") {\r\n        otherProps.onChange = (dt) => {\r\n            onChange(dt ? moment(dt).format(getFormat) : null);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        onChange(moment(value).format(getFormat))\r\n    }, [])\r\n\r\n    return (\r\n        <DatePicker\r\n            format={format || 'DD MMM YYYY'}\r\n            inputReadOnly={inputReadOnly || true}\r\n            disabledDate={(current) => {\r\n                let customDate = moment().format(\"YYYY-MM-DD\");\r\n                if (disablePastDate) {\r\n                    return current && current < moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n                if (disableUpcomingDate) {\r\n                    return current && current > moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n            }}\r\n            {...otherProps}\r\n            {...rest}\r\n            style={{ width: '100%' }}\r\n        />\r\n    )\r\n}\r\n\r\nexport function MultiChechBox(props) {\r\n    const { col = 3 } = props;\r\n    const type = typeof props.value === 'object' ? 'array' : 'string';\r\n\r\n    let [values, setValues] = useState();\r\n    let [options, setOptions] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        const val = typeof e.target.value * 1 !== 'NaN' ? e.target.value + '' : e.target.value * 1;\r\n        if (e.target.checked) {\r\n            values.push(val)\r\n            setValues([...values]);\r\n        } else {\r\n            if (values.indexOf(val) > -1) {\r\n                values.splice(values.indexOf(val), 1);\r\n                setValues([...values])\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (type === 'string') {\r\n            values = props.value ? props.value.split(',').map((v) => v * 1) : [];\r\n            setValues([...values]);\r\n        } else {\r\n            setValues([...props.value]);\r\n        }\r\n    }, [props.value]);\r\n\r\n    useEffect(() => {\r\n        let opts = props.options.map((v, i) => {\r\n            if (v.value) {\r\n                return { value: v.value * 1, label: v.label }\r\n            } else if (v.id) {\r\n                return { value: v.id * 1, label: v.name || v.title || v.label }\r\n            } else if (v._id) {\r\n                return { value: v._id + '', label: v.name || v.title || v.label }\r\n            }\r\n            return null;\r\n        });\r\n        setOptions(opts);\r\n    }, [props.options]);\r\n\r\n    useEffect(() => {\r\n        // if (type === 'string') {\r\n        //     props.onChange(values?.join());\r\n        // } else {\r\n        props.onChange(values)\r\n        // }\r\n    }, [(values || []).join(\",\")])\r\n\r\n    return (\r\n        <div className=\"row mingap\" >\r\n            {\r\n                options.map((v, i) => (\r\n                    <div className={`col-md-${col} mb-2 form-group`} key={i}>\r\n                        <div className=\"border p-1\">\r\n                            <Checkbox\r\n                                value={typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1}\r\n                                checked={values?.includes(typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1)}\r\n                                onChange={handleChange}\r\n                                className=\"mx-0 mr15\"\r\n                            >\r\n                                {v.label}\r\n                            </Checkbox>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport function AntdMsg($msg, $type = 'success') {\r\n    if ($msg) {\r\n        if ($type === 'success')\r\n            message.success($msg);\r\n        if ($type === 'error')\r\n            message.error($msg);\r\n        if ($type === 'warning')\r\n            message.warning($msg);\r\n    }\r\n};\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nconst UploadImage = forwardRef((props, ref) => {\r\n    const { fileCount } = props;\r\n    const fileRef = ref;\r\n    let { files } = props;\r\n    useEffect(() => {\r\n        setFileList(files)\r\n    }, [files])\r\n\r\n    if (files.length) {\r\n        files = files?.map((v, i) => {\r\n            return { uid: i, url: v.url, status: 'done', name: v.name };\r\n        });\r\n    } else {\r\n        files = [];\r\n    }\r\n\r\n\r\n    const [fileList, setFileList] = useState(files);\r\n\r\n    const dummyRequest = ({ file, onSuccess }) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n            if (!fileRef.current.uploadingFiles) {\r\n                fileRef.current.uploadingFiles = [];\r\n            }\r\n            fileRef.current.uploadingFiles?.push(file);\r\n        }, 0);\r\n    };\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewVisible(true);\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const handleChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <Upload\r\n                // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                customRequest={dummyRequest}\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={(value) => {\r\n                    if (value.file.status === 'removed' || value.file.status) {\r\n                        handleChange(value)\r\n                    }\r\n                }}\r\n                beforeUpload={\r\n                    (file) => {\r\n                        if (!file.type.includes('image/')) {\r\n                            message.error('Invalid file type');\r\n                            return false\r\n                        }\r\n                    }\r\n                }\r\n                onRemove={(e) => {\r\n                    if (!fileRef.current.deletingFiles) {\r\n                        fileRef.current.deletingFiles = [];\r\n                    }\r\n                    if (!e.thumbUrl) {\r\n                        fileRef.current.deletingFiles?.push(e);\r\n                    } else {\r\n                        fileRef.current.uploadingFiles = fileRef.current.uploadingFiles.filter((v) => { return v.uid !== e.uid })\r\n                    }\r\n                }}\r\n            >\r\n                {fileList.length >= fileCount ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                open={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    );\r\n})\r\n\r\nexport default UploadImage;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, Switch, message, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/transaction';\r\nimport serviceAccount from '../../services/account';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport { Excel } from \"antd-table-saveas-excel\"\r\nimport moment from 'moment';\r\nimport dayjs from 'dayjs';\r\n\r\n\r\n\r\nexport default function Transaction({ accountId = null }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [balance, setBalance] = useState(0)\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, accountId, startTime1: new Date, endTime1: new Date() });\r\n    const addNewModalRef = useRef();\r\n    const [total, setTotal] = useState(0)\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Company',\r\n            dataIndex: 'masterAccount',\r\n            width: 50,\r\n            render: (v) => {\r\n                if (v === \"SP\") {\r\n                    return <div style={{ textAlign: \"center\", color: \"black\", }}>  <Tag size=\"large\" color=\"blue\" >{v}</Tag></div>\r\n                }\r\n                else if (v === \"SL\") {\r\n                    return <div style={{ textAlign: \"center\", color: \"black\", }}> <Tag color=\"green\" >{\"SOUL\"}</Tag></div>\r\n                }\r\n                else if (v === \"SLQR\") {\r\n                    return <div style={{ textAlign: \"center\", color: \"black\", }}> <Tag color=\"orange\">SL(QR)</Tag></div>\r\n                }\r\n                else if (v === \"QS\") {\r\n                    return <div style={{ textAlign: \"center\", color: \"black\", }}><Tag color=\"pink\">{v}</Tag></div>\r\n                }\r\n                else if (v === \"PAR\") {\r\n                    return <div style={{ textAlign: \"center\", color: \"black\", }}><Tag color=\"yellow\" >{\"SELF\"}</Tag></div>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            width: 100,\r\n            render: v => moment(v).format('DD MMM YYYY')\r\n        },\r\n        {\r\n            title: 'Time',\r\n            dataIndex: 'createdAt',\r\n            width: 60,\r\n            render: v => moment(v).format('HH:mm A')\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"accountDetail\",\r\n            width: 100,\r\n            render: (data) => data?.name\r\n        },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n            width: 80,\r\n            render: (v, row) => row.transactionType === \"credit\" ? <div style={{ background: \"green\", fontSize: \"x-large\", color: \"white\", textAlign: \"center\" }}>  {` ₹${row.amount}`}</div> : <div style={{ background: \"red\", fontSize: \"x-large\", color: \"white\", textAlign: \"center\" }}>{` ₹${row.amount}`}</div>\r\n        },\r\n        {\r\n            title: 'Comission',\r\n            width: 80,\r\n            render: (v, data) => data.transactionType === \"credit\" ? <div style={{ fontWeight: \"bold\" }}>₹{data.amount * data.comissionPercentage / 100} </div> : \"---\"\r\n        },\r\n        {\r\n            title: 'Net Amount',\r\n\r\n            width: 80,\r\n            render: (v, data) => data.transactionType === \"credit\" ? <div style={{ fontWeight: \"bold\" }}>₹{data.amount - (data.amount * data.comissionPercentage / 100)}</div> : \"---\"\r\n        },\r\n        {\r\n            title: \"Remark\",\r\n            width: 100,\r\n            dataIndex: \"remark\"\r\n        },\r\n\r\n        {\r\n            title: 'Verify',\r\n            dataIndex: '_id',\r\n            width: 100,\r\n            render: (value, row) => {\r\n              if(row.transactionType===\"credit\"){\r\n\r\n                return <>\r\n            \r\n                    <Switch checkedChildren=\"Verified\" loading={row.ajxRequesting} unCheckedChildren=\"Unverified\" checked={row.status} onChange={(v) => {\r\n                        setData(data.map(vv => {\r\n                            if (vv._id === row._id) {\r\n                                return ({ ...vv, ajxRequesting: true });\r\n                            } else {\r\n                                return vv;\r\n                            }\r\n                        }));\r\n                        service.updateStatus({ _id: row._id, status: v }).then(res => {\r\n                            setData(data.map(vv => {\r\n                                if (vv._id === row._id) {\r\n                                    return ({ ...vv, status: res.data?.status, ajxRequesting: false });\r\n                                } else {\r\n                                    return vv;\r\n                                }\r\n                            }));\r\n                            getBalance();\r\n                            message.success(res.message);\r\n                        }).catch(err => {\r\n                            message.error(err.message)\r\n                        })\r\n                    }} />\r\n                </>\r\n\r\n              }else{\r\n                <></>\r\n              }\r\n               \r\n            }\r\n        },\r\n\r\n\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this Account data?\"\r\n                            onConfirm={() => { deleteData(row._id); }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                        </Popconfirm>\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                    }\r\n\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        getBalance()\r\n        service.list(qData).then(res => {\r\n            //   setTotal(res.data?.reduce((item) => ++item.amount, [0]))\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, accounts, accountId }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n        getBalance()\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    useEffect(() => {\r\n        serviceAccount.list({ isAll: 1 })\r\n            .then(res => {\r\n                setAccounts(res.data);\r\n            })\r\n            .catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            })\r\n    }, []);\r\n\r\n\r\n    const getBalance = () => {\r\n        service.balance().then((res) => {\r\n            let creditTotal = 0\r\n            let comission = 0\r\n            let debitTotal = 0\r\n            res.data?.map((item) => {\r\n                if (item.type === \"credit\") {\r\n                    creditTotal += item.totalAmount\r\n                    comission += item.comissionCharge\r\n\r\n                } else {\r\n                    debitTotal += item.totalAmount\r\n\r\n                }\r\n            })\r\n\r\n            setBalance((creditTotal - comission - debitTotal)?.toFixed(2))\r\n\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={{ span: 4 }} sm={{ span: 12 }} lg={{ span: 4 }}>\r\n                    <Button onClick={() => AddExcel(data)}>Download in Excel</Button>\r\n\r\n                </Col>\r\n            </Row>\r\n            <Typography.Title level={5} style={{ margin: 0 }}>\r\n                <span>\r\n                    List of All Transactions\r\n                </span>\r\n                <span style={{ color: 'red', float: 'right' }}>\r\n                    Available Balance ₨ {balance}\r\n                </span>\r\n            </Typography.Title>\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 100px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, accounts, balance, accountId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, accountId, qData, setQData, list, accounts, }) {\r\n\r\n    const [accountList, setAccountList] = useState([]);\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        const acc = accounts?.map((item) => (\r\n            {\r\n                label: item.name,\r\n                value: item._id,\r\n            }\r\n\r\n        ))\r\n        setAccountList(acc)\r\n    }, [accounts])\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {\r\n                    accountId\r\n                        ? null\r\n                        : <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\r\n                            <Form.Item style={{ marginBottom: 0 }}>\r\n                                <Select\r\n                                    showSearch\r\n                                    allowClear\r\n                                    placeholder=\"Select an Account\"\r\n                                    optionFilterProp=\"children\"\r\n                                    onChange={(e) => onChange(e, \"accountId\")}\r\n                                    filterOption={(input, option) =>\r\n                                        (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                                    }\r\n                                    options={accountList}\r\n                                />\r\n                            </Form.Item>\r\n                        </Col>\r\n                }\r\n\r\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: e?.[0] ? new Date(e[0]) : null, endTime: e?.[1] ? new Date(e[1]) : null }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select placeholder='Received or Given' value={qData.transactionType} onChange={v => { setQData({ ...qData, transactionType: v }) }} allowClear >\r\n                            <Select.Option value={\"credit\"} >Received</Select.Option>\r\n                            <Select.Option value={\"debit\"} >Given</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 4 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select placeholder='Search Company' value={qData.masterAccount} onChange={v => { setQData({ ...qData, masterAccount: v }) }} allowClear >\r\n                            <Select.Option value={\"SP\"} >SP</Select.Option>\r\n                            <Select.Option value={\"SL\"} >SOUL</Select.Option>\r\n                            <Select.Option value={\"SLQR\"} >SL(QR)</Select.Option>\r\n                            <Select.Option value={\"QS\"} >QS</Select.Option>\r\n                            <Select.Option value={\"PAR\"} >SELF</Select.Option>\r\n\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Item  >\r\n                        <Input placeholder=' Search by remark' value={qData.remark} onChange={v => { setQData({ ...qData, remark: v.target.value }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 3 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" block htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} >\r\n                    {\r\n\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right', }}>\r\n                            <Button type=\"primary\" style={{ marginRight: 8 }} icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm({ transactionType: \"credit\" }) }}> Receiving</Button>\r\n                            <Button type=\"primary\" style={{ background: \"red\" }} icon={<MinusCircleOutlined />} onClick={() => { addNewModalRef.current.openForm({ transactionType: \"debit\" }) }}>Giving</Button>\r\n\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, accounts, balance, accountId = null } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt._id\r\n                    ? { _id: dt._id }\r\n                    : { transactionType: dt.transactionType, status: dt.transactionType === \"debit\", accountId: accountId, date: new Date() }\r\n            );\r\n\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        // if (balance < (data.amount) * 1 && data.transactionType === 'debit') {\r\n        //     AntdMsg(\"Amount can not be greater than available balance\", 'error');\r\n        //     return;\r\n        // }\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    const [accountList, setAccountList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const acc = accounts?.map((item) => (\r\n            {\r\n                label: item.name,\r\n                value: item._id,\r\n            }\r\n\r\n        ))\r\n        setAccountList(acc)\r\n    }, [accounts])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Transaction Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[0, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Account Name\" required>\r\n                                    <Select\r\n                                        disabled={accountId}\r\n                                        showSearch\r\n                                        allowClear\r\n                                        placeholder=\"Select an Account\"\r\n                                        optionFilterProp=\"children\"\r\n                                        value={data.accountId}\r\n                                        onChange={v => { handleChange({ accountId: v }) }}\r\n                                        filterOption={(input, option) =>\r\n                                            (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                                        }\r\n                                        options={accountList}\r\n                                    />\r\n                                </Form.Item>\r\n                                {data.transactionType === \"debit\" ? <></> : < Form.Item label=\"Company Name\" required>\r\n\r\n                                    <Select\r\n                                        showSearch\r\n                                        allowClear\r\n                                        placeholder=\"Select Company\"\r\n                                        optionFilterProp=\"children\"\r\n                                        onChange={v => { handleChange({ masterAccount: v }) }}\r\n                                        filterOption={(input, option) =>\r\n                                            (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                                        }\r\n                                        value={data.masterAccount}\r\n                                        options={[\r\n\r\n                                            { label: \"S.P\", value: \"SP\" },\r\n                                            { label: \"SOUL\", value: \"SL\" },\r\n                                            { label: \"S.L(QR)\", value: \"SLQR\" },\r\n                                            { label: \"Q.S\", value: \"QS\" },\r\n                                            { label: \"SELF\", value: \"PAR\" },\r\n                                        ]}\r\n                                    />\r\n                                </Form.Item>}\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Amount\" required>\r\n                                    <Input placeholder='Enter Amount' max={balance} type=\"number\" min={0} value={data.amount} onChange={(e) => handleChange({ amount: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Remark\" required>\r\n                                    <Input placeholder='Remark' value={data.remark} onChange={(e) => handleChange({ remark: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Date\" required>\r\n                                    <DatePicker\r\n\r\n                                        format='DD MMM YYYY'\r\n                                        onChange={(v) => { handleChange({ date: new Date(v) }) }}\r\n                                        value={dayjs(moment(data.date).format('YYYY-MM-DD'), 'YYYY-MM-DD')}\r\n                                        className=\"w-100\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\nfunction AddExcel(data) {\r\n    let excelcolumns = [\r\n        {\r\n            title: 'Company',\r\n            dataIndex: 'company',\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n        },\r\n\r\n        {\r\n            title: 'Time',\r\n            dataIndex: 'time',\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n        },\r\n        {\r\n            title: 'Comission',\r\n            dataIndex: 'comission',\r\n        },\r\n        {\r\n            title: 'Net Amount',\r\n            dataIndex: 'netProfit',\r\n        },\r\n\r\n    ]\r\n\r\n\r\n    const excel = new Excel();\r\n    excel\r\n        .addSheet(\"test\")\r\n        .addColumns(excelcolumns)\r\n        .addDataSource(data.map(v => ({\r\n            ...v,\r\n            amount: v.transactionType === \"credit\" ? `+${v.amount}` : `(-)${v.amount}`,\r\n            name: v.accountDetail.name,\r\n            company: v.transactionType === \"credit\" ? v.masterAccount : \"---\",\r\n            date: moment(v.date).format('DD MMM YYYY'),\r\n            time: moment(v.createdAt).format('HH:mm A'),\r\n            comission: v.transactionType === \"credit\" ? v.amount * v.comissionPercentage / 100 : \"---\",\r\n            netProfit: v.transactionType === \"credit\" ? v.amount - (v.amount * v.comissionPercentage / 100) : \"--\"\r\n        })), {\r\n            str2Percent: true\r\n        })\r\n        .saveAs(\"Excel.xlsx\");\r\n}\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'transation';\r\n\r\n\r\n    static listLedger(data) {\r\n        return axios.get(this.baseURL + '/list-ledger/', { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/list-ledger\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/list-ledger', { ids: id });\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, Tag, Badge, } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/listLedger';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport moment from 'moment';\r\nimport dayjs from 'dayjs';\r\n\r\nexport default function AccountTransaction({ accountId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, accountId });\r\n    const addNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            width: 200,\r\n            render: v => moment(v).format('DD MMM YYYY')\r\n        },\r\n        {\r\n            title: 'Remarks',\r\n            dataIndex: 'remark',\r\n            width: 300,\r\n        },\r\n        {\r\n            title: 'Debit',\r\n            dataIndex: 'amount',\r\n            width: 150,\r\n            render: (v, row) => row.transactionType === 'debit' ? v.toFixed(2) : ''\r\n        },\r\n        {\r\n            title: 'Credit',\r\n            dataIndex: 'amount',\r\n            width: 150,\r\n            render: (v, row) => row.transactionType === 'credit' ? v.toFixed(2) : ''\r\n        },\r\n        {\r\n            title: 'Comission',\r\n            dataIndex: 'amount',\r\n            width: 150,\r\n            render: (v, row) => row.transactionType === 'credit' ? (v / 200).toFixed(2) : ''\r\n        },\r\n        {\r\n            title: \"Balance\",\r\n\r\n            width: 100,\r\n            render: (v, row, i) =>{\r\n\r\n                let balance = row.previousCreditAmount - row.previousDebitAmount;\r\n\r\n                balance = balance - (row.previousCreditAmount) / 200;\r\n\r\n                return  balance < 0\r\n                ? <> <div style={{ color: \" red \" }}>{balance} {i === (data.length - 1) ? <Badge color=\"red\" status=\"processing\"></Badge> : null}</div>  </>\r\n                : <div>{balance}</div>\r\n            }\r\n        },\r\n\r\n\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listLedger(qData).then(res => {\r\n\r\n\r\n\r\n            setData(res.data?.reverse().map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        size: 'small',\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Typography.Title level={5} style={{ margin: 0 }}>List of  Transactions</Typography.Title> */}\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: e?.[0] ? new Date(e[0]) : null, endTime: e?.[1] ? new Date(e[1]) : null }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={10}>\r\n                    {/* {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                        </Form.Item>\r\n                    } */}\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col> \r\n            </Row>\r\n        </Form>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/account';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport Transaction from './Transaction';\r\nimport AccountTransaction from './AccountTransaction';\r\n\r\nexport default function Account({ type }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const transactionModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 44,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: \"Initial Amount\",\r\n            dataIndex: \"initialAmount\"\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 110,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this Account data?\"\r\n                            onConfirm={() => { deleteData(row._id); }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                        </Popconfirm>\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} style={{ marginRight: \"4px\" }} />\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { transactionModalRef.current.openForm({ _id: row._id, name: row.name }) }} />\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ margin: 0 }}>List of  Accounts</Typography.Title>\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type }} />\r\n            <TransactionModal ref={transactionModalRef} />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={{ span: 24 }} sm={{ span: 4 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder='Search by name' onChange={(e) => { setQData({ ...qData, key: e.target.value }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 3 }} >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" block htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 2 }} >\r\n                    {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => { setData({ ...data, ...value }); }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Account Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={400}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[0, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder='Enter Name' value={data.name} onChange={(e) => handleChange({ name: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Initial Amount\" required>\r\n                                    <Input placeholder='initialAmount' value={data.initialAmount} onChange={(e) => handleChange({ initialAmount: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nconst TransactionModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : {}\r\n            );\r\n        }\r\n    }));\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>Ledger of <span style={{ color: 'red' }}>{data.name}</span></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1600}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <AccountTransaction accountId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Spin, Row, Col, Typography, Divider, Switch } from 'antd';\r\n//import { PageHeader } from '@ant-design/pro-layout'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n//import greetingTime from 'greeting-time';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport service from '../../../services/user';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n//import UploadImage from '../../../utils/UploadImage';\r\n\r\nexport default function Profile() {\r\n\r\n    const [data, setData] = useState({});\r\n    const [fileList, setFileList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [doSave, setDoSave] = useState(false);\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.profile().then(res => {\r\n            setData(res.data.result || {});\r\n            if (res.data.result?.avatar) {\r\n                setFileList([res.data.result?.avatar]);\r\n            }\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateProfile();\r\n    }, [data]);\r\n\r\n    function updateProfile() {\r\n        if (doSave) {\r\n            setLoading(true);\r\n            service.saveProfile(data).then(res => {\r\n                AntdMsg(res.message);\r\n            }).catch(err => {\r\n                AntdMsg(err.message, 'error');\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleChange(fileList?.[0], 'avatar');\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                {/* <PageHeader\r\n                // title={greetingTime(new Date()) + ', ' + data?.name}\r\n                // extra={[<Switch key={'do-save'} checkedChildren=\"Update\" unCheckedChildren=\"Update\" checked={doSave} onChange={v => { setDoSave(v) }} />]}\r\n                /> */}\r\n                <Divider />\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={16}>\r\n                            <Row gutter={[12, 10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'name'); } }} level={5} >\r\n                                            {data.name}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">User Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'userName'); } }} level={5} >\r\n                                            {data.userName}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Email</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'email'); } }} level={5} >\r\n                                            {data.email}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Phone Number</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'phone'); } }} level={5} >\r\n                                            {data.phone}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            {/* <UploadImage {...{ fileList, setFileList }} disabled={!doSave} cropImage /> */}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Spin>\r\n        </>\r\n    );\r\n};","import React from \"react\";\r\nimport { Card, Layout, Menu } from \"antd\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\nimport Dashboard from \"../pages/Dashboard\";\r\nimport Account from \"../pages/Account\";\r\nimport Transaction from \"../pages/Transaction\";\r\nimport Profile from \"../pages/admin/Profile\";\r\n\r\n\r\nexport default function MyLayout() {\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh', }}>\r\n                <Layout className=\"site-layout\" >\r\n                    <Layout.Header style={{ padding: 0, height: 'auto' }} >\r\n                        <Menu theme=\"dark\" mode=\"horizontal\" items={[\r\n\r\n                            {\r\n                                label: <Link to={'/dashboard'}>Dashboard</Link>,\r\n                                key: \"dashboard\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/accounts'}>Account</Link>,\r\n                                key: \"accounts\"\r\n                            },\r\n\r\n                            {\r\n                                label: <Link to={'/transaction'}>Transactions</Link>,\r\n                                key: \"transaction\"\r\n                            },\r\n                            {\r\n                                label: <span style={{ color: 'red' }} onClick={() => { localStorage.clear(); window.location.reload(); }}>Logout</span>,\r\n                                key: \"transaction\"\r\n                            },\r\n                            // {\r\n                            //     label: <Link to={'/profile'}>Profile</Link>,\r\n                            //     key: \"profile\"\r\n                            // },\r\n\r\n                        ]}>\r\n                        </Menu>\r\n                    </Layout.Header>\r\n\r\n                    <Layout.Content>\r\n                        <Card style={{ borderRadius: \"none\" }}>\r\n                            <Routes>\r\n\r\n                                <Route path=\"dashboard/\" element={<Dashboard />} />\r\n                                <Route path=\"accounts/\" element={<Account />} />\r\n                                <Route path=\"transaction/\" element={<Transaction />} />\r\n                                <Route path=\"profile/\" element={<Profile />} />\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["Error404","status","title","subTitle","extra","to","type","service","data","axios","this","baseURL","params","id","ids","useState","ajxRequesting","setAjxRequesting","accounts","setAccounts","startTime","Date","endTime","qData","setQData","given","setGiven","received","setReveived","totalcomission","setTotalComission","sp","setSp","spCount","setSpCount","slCount","setSlCount","slqrCount","setSlqrCount","qsCount","setQsCount","parCount","setParCount","sl","setSl","slqr","setSlqr","qs","setQs","par","setPar","useEffect","getBalance","getTotal","serviceAccount","isAll","then","res","map","v","label","name","value","_id","catch","err","message","dt","Object","keys","finally","balance","creditTotal","comission","debitTotal","item","totalAmount","comissionCharge","toFixed","masterAccount","totalCount","spinning","indicator","LoadingOutlined","style","fontSize","spin","gutter","xs","span","sm","marginBottom","showSearch","allowClear","placeholder","optionFilterProp","accountId","onChange","filterOption","input","option","toLowerCase","includes","width","options","format","e","htmlType","block","onClick","marginTop","lg","hoverable","color","border","offset","MyPagination","props","total","showTotal","start","page","limit","end","pageSize","current","pp","showSizeChanger","AntdMsg","$msg","$type","Transaction","setData","loading","setLoading","selected","setSelected","setBalance","startTime1","endTime1","addNewModalRef","useRef","columns","dataIndex","render","textAlign","size","moment","row","transactionType","background","amount","fontWeight","comissionPercentage","checkedChildren","unCheckedChildren","checked","vv","updateStatus","onConfirm","deleteData","okText","cancelText","danger","icon","DeleteOutlined","EditOutlined","openForm","filter","hidden","list","key","tableColumns","ellipsis","fixed","length","tableProps","bordered","Search","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","excelcolumns","Excel","addSheet","addColumns","addDataSource","accountDetail","company","date","time","createdAt","netProfit","str2Percent","saveAs","AddExcel","level","margin","float","pagination","position","dataSource","scroll","y","x","AddForm","ref","accountList","setAccountList","acc","onSubmitCapture","className","remark","target","marginRight","MinusCircleOutlined","forwardRef","open","setOpen","aspect","handleChange","entries","forEach","ent","varDt","k","split","i","parseInt","useImperativeHandle","save","detail","top","onOk","okButtonProps","disabled","onCancel","destroyOnClose","maskClosable","layout","required","max","min","dayjs","AccountTransaction","previousCreditAmount","previousDebitAmount","reverse","Account","transactionModalRef","EyeOutlined","TransactionModal","initialAmount","Profile","fileList","setFileList","doSave","result","avatar","strong","editable","editing","triggerType","userName","email","phone","MyLayout","minHeight","padding","height","theme","mode","items","localStorage","clear","window","location","reload","borderRadius","path","element"],"sourceRoot":""}